

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Fri Aug 10 16:02:52 2018

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	pa_nodes0,global,class=CODE,delta=2
    17                           	dabs	1,0x71,1,_EE_Key_2
    18                           	dabs	1,0x70,1,_EE_Key_1
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 1.45
    22                           ; Generated 16/11/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F18345 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0097                     	;# 
    98  009B                     	;# 
    99  009B                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  0111                     	;# 
   108  0112                     	;# 
   109  0113                     	;# 
   110  0114                     	;# 
   111  0115                     	;# 
   112  0116                     	;# 
   113  0117                     	;# 
   114  0118                     	;# 
   115  0119                     	;# 
   116  018C                     	;# 
   117  018D                     	;# 
   118  018E                     	;# 
   119  0197                     	;# 
   120  0199                     	;# 
   121  0199                     	;# 
   122  0199                     	;# 
   123  019A                     	;# 
   124  019A                     	;# 
   125  019A                     	;# 
   126  019B                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019B                     	;# 
   130  019B                     	;# 
   131  019C                     	;# 
   132  019C                     	;# 
   133  019C                     	;# 
   134  019D                     	;# 
   135  019D                     	;# 
   136  019D                     	;# 
   137  019E                     	;# 
   138  019E                     	;# 
   139  019E                     	;# 
   140  019F                     	;# 
   141  019F                     	;# 
   142  019F                     	;# 
   143  019F                     	;# 
   144  019F                     	;# 
   145  020C                     	;# 
   146  020D                     	;# 
   147  020E                     	;# 
   148  0211                     	;# 
   149  0211                     	;# 
   150  0212                     	;# 
   151  0212                     	;# 
   152  0213                     	;# 
   153  0213                     	;# 
   154  0214                     	;# 
   155  0214                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0216                     	;# 
   161  0216                     	;# 
   162  0217                     	;# 
   163  0217                     	;# 
   164  0219                     	;# 
   165  021A                     	;# 
   166  021B                     	;# 
   167  021C                     	;# 
   168  021D                     	;# 
   169  021D                     	;# 
   170  021E                     	;# 
   171  021F                     	;# 
   172  028C                     	;# 
   173  028D                     	;# 
   174  028E                     	;# 
   175  0291                     	;# 
   176  0291                     	;# 
   177  0292                     	;# 
   178  0293                     	;# 
   179  0294                     	;# 
   180  0295                     	;# 
   181  0295                     	;# 
   182  0296                     	;# 
   183  0297                     	;# 
   184  0298                     	;# 
   185  029F                     	;# 
   186  030C                     	;# 
   187  030D                     	;# 
   188  030E                     	;# 
   189  0311                     	;# 
   190  0311                     	;# 
   191  0312                     	;# 
   192  0313                     	;# 
   193  0314                     	;# 
   194  0315                     	;# 
   195  0315                     	;# 
   196  0316                     	;# 
   197  0317                     	;# 
   198  0318                     	;# 
   199  038C                     	;# 
   200  038D                     	;# 
   201  038E                     	;# 
   202  0391                     	;# 
   203  0392                     	;# 
   204  0393                     	;# 
   205  0394                     	;# 
   206  0395                     	;# 
   207  0396                     	;# 
   208  0397                     	;# 
   209  0398                     	;# 
   210  0399                     	;# 
   211  039A                     	;# 
   212  039C                     	;# 
   213  039D                     	;# 
   214  039E                     	;# 
   215  039F                     	;# 
   216  0411                     	;# 
   217  0411                     	;# 
   218  0412                     	;# 
   219  0413                     	;# 
   220  0414                     	;# 
   221  0415                     	;# 
   222  0416                     	;# 
   223  0417                     	;# 
   224  0418                     	;# 
   225  0418                     	;# 
   226  0419                     	;# 
   227  041A                     	;# 
   228  041B                     	;# 
   229  041C                     	;# 
   230  041D                     	;# 
   231  041E                     	;# 
   232  041F                     	;# 
   233  0498                     	;# 
   234  0498                     	;# 
   235  0499                     	;# 
   236  049A                     	;# 
   237  049B                     	;# 
   238  049B                     	;# 
   239  049C                     	;# 
   240  049D                     	;# 
   241  049E                     	;# 
   242  049F                     	;# 
   243  0617                     	;# 
   244  0618                     	;# 
   245  0619                     	;# 
   246  0619                     	;# 
   247  061A                     	;# 
   248  061B                     	;# 
   249  061C                     	;# 
   250  061C                     	;# 
   251  061F                     	;# 
   252  0691                     	;# 
   253  0692                     	;# 
   254  0693                     	;# 
   255  0694                     	;# 
   256  0695                     	;# 
   257  0696                     	;# 
   258  0697                     	;# 
   259  0698                     	;# 
   260  0699                     	;# 
   261  0711                     	;# 
   262  0712                     	;# 
   263  0713                     	;# 
   264  0714                     	;# 
   265  0715                     	;# 
   266  0716                     	;# 
   267  0717                     	;# 
   268  0718                     	;# 
   269  0719                     	;# 
   270  0891                     	;# 
   271  0891                     	;# 
   272  0891                     	;# 
   273  0891                     	;# 
   274  0891                     	;# 
   275  0891                     	;# 
   276  0892                     	;# 
   277  0892                     	;# 
   278  0892                     	;# 
   279  0893                     	;# 
   280  0893                     	;# 
   281  0893                     	;# 
   282  0893                     	;# 
   283  0893                     	;# 
   284  0893                     	;# 
   285  0894                     	;# 
   286  0894                     	;# 
   287  0894                     	;# 
   288  0895                     	;# 
   289  0895                     	;# 
   290  0895                     	;# 
   291  0896                     	;# 
   292  0896                     	;# 
   293  0896                     	;# 
   294  089B                     	;# 
   295  0911                     	;# 
   296  0912                     	;# 
   297  0913                     	;# 
   298  0914                     	;# 
   299  0915                     	;# 
   300  0916                     	;# 
   301  0918                     	;# 
   302  0919                     	;# 
   303  091A                     	;# 
   304  091B                     	;# 
   305  091C                     	;# 
   306  091D                     	;# 
   307  091E                     	;# 
   308  091F                     	;# 
   309  0E0F                     	;# 
   310  0E10                     	;# 
   311  0E11                     	;# 
   312  0E12                     	;# 
   313  0E13                     	;# 
   314  0E14                     	;# 
   315  0E15                     	;# 
   316  0E16                     	;# 
   317  0E17                     	;# 
   318  0E18                     	;# 
   319  0E19                     	;# 
   320  0E1A                     	;# 
   321  0E1B                     	;# 
   322  0E1C                     	;# 
   323  0E1D                     	;# 
   324  0E1E                     	;# 
   325  0E1F                     	;# 
   326  0E20                     	;# 
   327  0E21                     	;# 
   328  0E22                     	;# 
   329  0E24                     	;# 
   330  0E25                     	;# 
   331  0E28                     	;# 
   332  0E29                     	;# 
   333  0E2A                     	;# 
   334  0E2B                     	;# 
   335  0E2C                     	;# 
   336  0E2D                     	;# 
   337  0E2E                     	;# 
   338  0E2F                     	;# 
   339  0E90                     	;# 
   340  0E91                     	;# 
   341  0E92                     	;# 
   342  0E94                     	;# 
   343  0E95                     	;# 
   344  0E9C                     	;# 
   345  0E9D                     	;# 
   346  0E9E                     	;# 
   347  0E9F                     	;# 
   348  0EA0                     	;# 
   349  0EA1                     	;# 
   350  0EA2                     	;# 
   351  0EA3                     	;# 
   352  0EA4                     	;# 
   353  0EA5                     	;# 
   354  0EA6                     	;# 
   355  0EA7                     	;# 
   356  0F0F                     	;# 
   357  0F10                     	;# 
   358  0F11                     	;# 
   359  0F12                     	;# 
   360  0F13                     	;# 
   361  0F14                     	;# 
   362  0F15                     	;# 
   363  0F16                     	;# 
   364  0F17                     	;# 
   365  0F18                     	;# 
   366  0F19                     	;# 
   367  0F1A                     	;# 
   368  0F1B                     	;# 
   369  0F1C                     	;# 
   370  0F1D                     	;# 
   371  0F1E                     	;# 
   372  0F1F                     	;# 
   373  0F20                     	;# 
   374  0F21                     	;# 
   375  0F22                     	;# 
   376  0F23                     	;# 
   377  0F24                     	;# 
   378  0F25                     	;# 
   379  0F26                     	;# 
   380  0F27                     	;# 
   381  0F28                     	;# 
   382  0F29                     	;# 
   383  0F2A                     	;# 
   384  0F2B                     	;# 
   385  0F2C                     	;# 
   386  0F2D                     	;# 
   387  0F2E                     	;# 
   388  0F2F                     	;# 
   389  0F30                     	;# 
   390  0F31                     	;# 
   391  0F32                     	;# 
   392  0F33                     	;# 
   393  0F34                     	;# 
   394  0F35                     	;# 
   395  0F36                     	;# 
   396  0F37                     	;# 
   397  0FE4                     	;# 
   398  0FE5                     	;# 
   399  0FE6                     	;# 
   400  0FE7                     	;# 
   401  0FE8                     	;# 
   402  0FE9                     	;# 
   403  0FEA                     	;# 
   404  0FEB                     	;# 
   405  0FED                     	;# 
   406  0FEE                     	;# 
   407  0FEF                     	;# 
   408  0000                     	;# 
   409  0001                     	;# 
   410  0002                     	;# 
   411  0003                     	;# 
   412  0004                     	;# 
   413  0005                     	;# 
   414  0006                     	;# 
   415  0007                     	;# 
   416  0008                     	;# 
   417  0009                     	;# 
   418  000A                     	;# 
   419  000B                     	;# 
   420  000C                     	;# 
   421  000D                     	;# 
   422  000E                     	;# 
   423  0010                     	;# 
   424  0011                     	;# 
   425  0012                     	;# 
   426  0013                     	;# 
   427  0014                     	;# 
   428  0015                     	;# 
   429  0015                     	;# 
   430  0016                     	;# 
   431  0016                     	;# 
   432  0017                     	;# 
   433  0018                     	;# 
   434  0019                     	;# 
   435  0019                     	;# 
   436  001A                     	;# 
   437  001B                     	;# 
   438  001C                     	;# 
   439  001D                     	;# 
   440  001E                     	;# 
   441  001F                     	;# 
   442  008C                     	;# 
   443  008D                     	;# 
   444  008E                     	;# 
   445  0090                     	;# 
   446  0091                     	;# 
   447  0092                     	;# 
   448  0093                     	;# 
   449  0094                     	;# 
   450  0097                     	;# 
   451  009B                     	;# 
   452  009B                     	;# 
   453  009C                     	;# 
   454  009D                     	;# 
   455  009E                     	;# 
   456  009F                     	;# 
   457  010C                     	;# 
   458  010D                     	;# 
   459  010E                     	;# 
   460  0111                     	;# 
   461  0112                     	;# 
   462  0113                     	;# 
   463  0114                     	;# 
   464  0115                     	;# 
   465  0116                     	;# 
   466  0117                     	;# 
   467  0118                     	;# 
   468  0119                     	;# 
   469  018C                     	;# 
   470  018D                     	;# 
   471  018E                     	;# 
   472  0197                     	;# 
   473  0199                     	;# 
   474  0199                     	;# 
   475  0199                     	;# 
   476  019A                     	;# 
   477  019A                     	;# 
   478  019A                     	;# 
   479  019B                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019B                     	;# 
   483  019B                     	;# 
   484  019C                     	;# 
   485  019C                     	;# 
   486  019C                     	;# 
   487  019D                     	;# 
   488  019D                     	;# 
   489  019D                     	;# 
   490  019E                     	;# 
   491  019E                     	;# 
   492  019E                     	;# 
   493  019F                     	;# 
   494  019F                     	;# 
   495  019F                     	;# 
   496  019F                     	;# 
   497  019F                     	;# 
   498  020C                     	;# 
   499  020D                     	;# 
   500  020E                     	;# 
   501  0211                     	;# 
   502  0211                     	;# 
   503  0212                     	;# 
   504  0212                     	;# 
   505  0213                     	;# 
   506  0213                     	;# 
   507  0214                     	;# 
   508  0214                     	;# 
   509  0215                     	;# 
   510  0215                     	;# 
   511  0215                     	;# 
   512  0215                     	;# 
   513  0216                     	;# 
   514  0216                     	;# 
   515  0217                     	;# 
   516  0217                     	;# 
   517  0219                     	;# 
   518  021A                     	;# 
   519  021B                     	;# 
   520  021C                     	;# 
   521  021D                     	;# 
   522  021D                     	;# 
   523  021E                     	;# 
   524  021F                     	;# 
   525  028C                     	;# 
   526  028D                     	;# 
   527  028E                     	;# 
   528  0291                     	;# 
   529  0291                     	;# 
   530  0292                     	;# 
   531  0293                     	;# 
   532  0294                     	;# 
   533  0295                     	;# 
   534  0295                     	;# 
   535  0296                     	;# 
   536  0297                     	;# 
   537  0298                     	;# 
   538  029F                     	;# 
   539  030C                     	;# 
   540  030D                     	;# 
   541  030E                     	;# 
   542  0311                     	;# 
   543  0311                     	;# 
   544  0312                     	;# 
   545  0313                     	;# 
   546  0314                     	;# 
   547  0315                     	;# 
   548  0315                     	;# 
   549  0316                     	;# 
   550  0317                     	;# 
   551  0318                     	;# 
   552  038C                     	;# 
   553  038D                     	;# 
   554  038E                     	;# 
   555  0391                     	;# 
   556  0392                     	;# 
   557  0393                     	;# 
   558  0394                     	;# 
   559  0395                     	;# 
   560  0396                     	;# 
   561  0397                     	;# 
   562  0398                     	;# 
   563  0399                     	;# 
   564  039A                     	;# 
   565  039C                     	;# 
   566  039D                     	;# 
   567  039E                     	;# 
   568  039F                     	;# 
   569  0411                     	;# 
   570  0411                     	;# 
   571  0412                     	;# 
   572  0413                     	;# 
   573  0414                     	;# 
   574  0415                     	;# 
   575  0416                     	;# 
   576  0417                     	;# 
   577  0418                     	;# 
   578  0418                     	;# 
   579  0419                     	;# 
   580  041A                     	;# 
   581  041B                     	;# 
   582  041C                     	;# 
   583  041D                     	;# 
   584  041E                     	;# 
   585  041F                     	;# 
   586  0498                     	;# 
   587  0498                     	;# 
   588  0499                     	;# 
   589  049A                     	;# 
   590  049B                     	;# 
   591  049B                     	;# 
   592  049C                     	;# 
   593  049D                     	;# 
   594  049E                     	;# 
   595  049F                     	;# 
   596  0617                     	;# 
   597  0618                     	;# 
   598  0619                     	;# 
   599  0619                     	;# 
   600  061A                     	;# 
   601  061B                     	;# 
   602  061C                     	;# 
   603  061C                     	;# 
   604  061F                     	;# 
   605  0691                     	;# 
   606  0692                     	;# 
   607  0693                     	;# 
   608  0694                     	;# 
   609  0695                     	;# 
   610  0696                     	;# 
   611  0697                     	;# 
   612  0698                     	;# 
   613  0699                     	;# 
   614  0711                     	;# 
   615  0712                     	;# 
   616  0713                     	;# 
   617  0714                     	;# 
   618  0715                     	;# 
   619  0716                     	;# 
   620  0717                     	;# 
   621  0718                     	;# 
   622  0719                     	;# 
   623  0891                     	;# 
   624  0891                     	;# 
   625  0891                     	;# 
   626  0891                     	;# 
   627  0891                     	;# 
   628  0891                     	;# 
   629  0892                     	;# 
   630  0892                     	;# 
   631  0892                     	;# 
   632  0893                     	;# 
   633  0893                     	;# 
   634  0893                     	;# 
   635  0893                     	;# 
   636  0893                     	;# 
   637  0893                     	;# 
   638  0894                     	;# 
   639  0894                     	;# 
   640  0894                     	;# 
   641  0895                     	;# 
   642  0895                     	;# 
   643  0895                     	;# 
   644  0896                     	;# 
   645  0896                     	;# 
   646  0896                     	;# 
   647  089B                     	;# 
   648  0911                     	;# 
   649  0912                     	;# 
   650  0913                     	;# 
   651  0914                     	;# 
   652  0915                     	;# 
   653  0916                     	;# 
   654  0918                     	;# 
   655  0919                     	;# 
   656  091A                     	;# 
   657  091B                     	;# 
   658  091C                     	;# 
   659  091D                     	;# 
   660  091E                     	;# 
   661  091F                     	;# 
   662  0E0F                     	;# 
   663  0E10                     	;# 
   664  0E11                     	;# 
   665  0E12                     	;# 
   666  0E13                     	;# 
   667  0E14                     	;# 
   668  0E15                     	;# 
   669  0E16                     	;# 
   670  0E17                     	;# 
   671  0E18                     	;# 
   672  0E19                     	;# 
   673  0E1A                     	;# 
   674  0E1B                     	;# 
   675  0E1C                     	;# 
   676  0E1D                     	;# 
   677  0E1E                     	;# 
   678  0E1F                     	;# 
   679  0E20                     	;# 
   680  0E21                     	;# 
   681  0E22                     	;# 
   682  0E24                     	;# 
   683  0E25                     	;# 
   684  0E28                     	;# 
   685  0E29                     	;# 
   686  0E2A                     	;# 
   687  0E2B                     	;# 
   688  0E2C                     	;# 
   689  0E2D                     	;# 
   690  0E2E                     	;# 
   691  0E2F                     	;# 
   692  0E90                     	;# 
   693  0E91                     	;# 
   694  0E92                     	;# 
   695  0E94                     	;# 
   696  0E95                     	;# 
   697  0E9C                     	;# 
   698  0E9D                     	;# 
   699  0E9E                     	;# 
   700  0E9F                     	;# 
   701  0EA0                     	;# 
   702  0EA1                     	;# 
   703  0EA2                     	;# 
   704  0EA3                     	;# 
   705  0EA4                     	;# 
   706  0EA5                     	;# 
   707  0EA6                     	;# 
   708  0EA7                     	;# 
   709  0F0F                     	;# 
   710  0F10                     	;# 
   711  0F11                     	;# 
   712  0F12                     	;# 
   713  0F13                     	;# 
   714  0F14                     	;# 
   715  0F15                     	;# 
   716  0F16                     	;# 
   717  0F17                     	;# 
   718  0F18                     	;# 
   719  0F19                     	;# 
   720  0F1A                     	;# 
   721  0F1B                     	;# 
   722  0F1C                     	;# 
   723  0F1D                     	;# 
   724  0F1E                     	;# 
   725  0F1F                     	;# 
   726  0F20                     	;# 
   727  0F21                     	;# 
   728  0F22                     	;# 
   729  0F23                     	;# 
   730  0F24                     	;# 
   731  0F25                     	;# 
   732  0F26                     	;# 
   733  0F27                     	;# 
   734  0F28                     	;# 
   735  0F29                     	;# 
   736  0F2A                     	;# 
   737  0F2B                     	;# 
   738  0F2C                     	;# 
   739  0F2D                     	;# 
   740  0F2E                     	;# 
   741  0F2F                     	;# 
   742  0F30                     	;# 
   743  0F31                     	;# 
   744  0F32                     	;# 
   745  0F33                     	;# 
   746  0F34                     	;# 
   747  0F35                     	;# 
   748  0F36                     	;# 
   749  0F37                     	;# 
   750  0FE4                     	;# 
   751  0FE5                     	;# 
   752  0FE6                     	;# 
   753  0FE7                     	;# 
   754  0FE8                     	;# 
   755  0FE9                     	;# 
   756  0FEA                     	;# 
   757  0FEB                     	;# 
   758  0FED                     	;# 
   759  0FEE                     	;# 
   760  0FEF                     	;# 
   761  0000                     	;# 
   762  0001                     	;# 
   763  0002                     	;# 
   764  0003                     	;# 
   765  0004                     	;# 
   766  0005                     	;# 
   767  0006                     	;# 
   768  0007                     	;# 
   769  0008                     	;# 
   770  0009                     	;# 
   771  000A                     	;# 
   772  000B                     	;# 
   773  000C                     	;# 
   774  000D                     	;# 
   775  000E                     	;# 
   776  0010                     	;# 
   777  0011                     	;# 
   778  0012                     	;# 
   779  0013                     	;# 
   780  0014                     	;# 
   781  0015                     	;# 
   782  0015                     	;# 
   783  0016                     	;# 
   784  0016                     	;# 
   785  0017                     	;# 
   786  0018                     	;# 
   787  0019                     	;# 
   788  0019                     	;# 
   789  001A                     	;# 
   790  001B                     	;# 
   791  001C                     	;# 
   792  001D                     	;# 
   793  001E                     	;# 
   794  001F                     	;# 
   795  008C                     	;# 
   796  008D                     	;# 
   797  008E                     	;# 
   798  0090                     	;# 
   799  0091                     	;# 
   800  0092                     	;# 
   801  0093                     	;# 
   802  0094                     	;# 
   803  0097                     	;# 
   804  009B                     	;# 
   805  009B                     	;# 
   806  009C                     	;# 
   807  009D                     	;# 
   808  009E                     	;# 
   809  009F                     	;# 
   810  010C                     	;# 
   811  010D                     	;# 
   812  010E                     	;# 
   813  0111                     	;# 
   814  0112                     	;# 
   815  0113                     	;# 
   816  0114                     	;# 
   817  0115                     	;# 
   818  0116                     	;# 
   819  0117                     	;# 
   820  0118                     	;# 
   821  0119                     	;# 
   822  018C                     	;# 
   823  018D                     	;# 
   824  018E                     	;# 
   825  0197                     	;# 
   826  0199                     	;# 
   827  0199                     	;# 
   828  0199                     	;# 
   829  019A                     	;# 
   830  019A                     	;# 
   831  019A                     	;# 
   832  019B                     	;# 
   833  019B                     	;# 
   834  019B                     	;# 
   835  019B                     	;# 
   836  019B                     	;# 
   837  019C                     	;# 
   838  019C                     	;# 
   839  019C                     	;# 
   840  019D                     	;# 
   841  019D                     	;# 
   842  019D                     	;# 
   843  019E                     	;# 
   844  019E                     	;# 
   845  019E                     	;# 
   846  019F                     	;# 
   847  019F                     	;# 
   848  019F                     	;# 
   849  019F                     	;# 
   850  019F                     	;# 
   851  020C                     	;# 
   852  020D                     	;# 
   853  020E                     	;# 
   854  0211                     	;# 
   855  0211                     	;# 
   856  0212                     	;# 
   857  0212                     	;# 
   858  0213                     	;# 
   859  0213                     	;# 
   860  0214                     	;# 
   861  0214                     	;# 
   862  0215                     	;# 
   863  0215                     	;# 
   864  0215                     	;# 
   865  0215                     	;# 
   866  0216                     	;# 
   867  0216                     	;# 
   868  0217                     	;# 
   869  0217                     	;# 
   870  0219                     	;# 
   871  021A                     	;# 
   872  021B                     	;# 
   873  021C                     	;# 
   874  021D                     	;# 
   875  021D                     	;# 
   876  021E                     	;# 
   877  021F                     	;# 
   878  028C                     	;# 
   879  028D                     	;# 
   880  028E                     	;# 
   881  0291                     	;# 
   882  0291                     	;# 
   883  0292                     	;# 
   884  0293                     	;# 
   885  0294                     	;# 
   886  0295                     	;# 
   887  0295                     	;# 
   888  0296                     	;# 
   889  0297                     	;# 
   890  0298                     	;# 
   891  029F                     	;# 
   892  030C                     	;# 
   893  030D                     	;# 
   894  030E                     	;# 
   895  0311                     	;# 
   896  0311                     	;# 
   897  0312                     	;# 
   898  0313                     	;# 
   899  0314                     	;# 
   900  0315                     	;# 
   901  0315                     	;# 
   902  0316                     	;# 
   903  0317                     	;# 
   904  0318                     	;# 
   905  038C                     	;# 
   906  038D                     	;# 
   907  038E                     	;# 
   908  0391                     	;# 
   909  0392                     	;# 
   910  0393                     	;# 
   911  0394                     	;# 
   912  0395                     	;# 
   913  0396                     	;# 
   914  0397                     	;# 
   915  0398                     	;# 
   916  0399                     	;# 
   917  039A                     	;# 
   918  039C                     	;# 
   919  039D                     	;# 
   920  039E                     	;# 
   921  039F                     	;# 
   922  0411                     	;# 
   923  0411                     	;# 
   924  0412                     	;# 
   925  0413                     	;# 
   926  0414                     	;# 
   927  0415                     	;# 
   928  0416                     	;# 
   929  0417                     	;# 
   930  0418                     	;# 
   931  0418                     	;# 
   932  0419                     	;# 
   933  041A                     	;# 
   934  041B                     	;# 
   935  041C                     	;# 
   936  041D                     	;# 
   937  041E                     	;# 
   938  041F                     	;# 
   939  0498                     	;# 
   940  0498                     	;# 
   941  0499                     	;# 
   942  049A                     	;# 
   943  049B                     	;# 
   944  049B                     	;# 
   945  049C                     	;# 
   946  049D                     	;# 
   947  049E                     	;# 
   948  049F                     	;# 
   949  0617                     	;# 
   950  0618                     	;# 
   951  0619                     	;# 
   952  0619                     	;# 
   953  061A                     	;# 
   954  061B                     	;# 
   955  061C                     	;# 
   956  061C                     	;# 
   957  061F                     	;# 
   958  0691                     	;# 
   959  0692                     	;# 
   960  0693                     	;# 
   961  0694                     	;# 
   962  0695                     	;# 
   963  0696                     	;# 
   964  0697                     	;# 
   965  0698                     	;# 
   966  0699                     	;# 
   967  0711                     	;# 
   968  0712                     	;# 
   969  0713                     	;# 
   970  0714                     	;# 
   971  0715                     	;# 
   972  0716                     	;# 
   973  0717                     	;# 
   974  0718                     	;# 
   975  0719                     	;# 
   976  0891                     	;# 
   977  0891                     	;# 
   978  0891                     	;# 
   979  0891                     	;# 
   980  0891                     	;# 
   981  0891                     	;# 
   982  0892                     	;# 
   983  0892                     	;# 
   984  0892                     	;# 
   985  0893                     	;# 
   986  0893                     	;# 
   987  0893                     	;# 
   988  0893                     	;# 
   989  0893                     	;# 
   990  0893                     	;# 
   991  0894                     	;# 
   992  0894                     	;# 
   993  0894                     	;# 
   994  0895                     	;# 
   995  0895                     	;# 
   996  0895                     	;# 
   997  0896                     	;# 
   998  0896                     	;# 
   999  0896                     	;# 
  1000  089B                     	;# 
  1001  0911                     	;# 
  1002  0912                     	;# 
  1003  0913                     	;# 
  1004  0914                     	;# 
  1005  0915                     	;# 
  1006  0916                     	;# 
  1007  0918                     	;# 
  1008  0919                     	;# 
  1009  091A                     	;# 
  1010  091B                     	;# 
  1011  091C                     	;# 
  1012  091D                     	;# 
  1013  091E                     	;# 
  1014  091F                     	;# 
  1015  0E0F                     	;# 
  1016  0E10                     	;# 
  1017  0E11                     	;# 
  1018  0E12                     	;# 
  1019  0E13                     	;# 
  1020  0E14                     	;# 
  1021  0E15                     	;# 
  1022  0E16                     	;# 
  1023  0E17                     	;# 
  1024  0E18                     	;# 
  1025  0E19                     	;# 
  1026  0E1A                     	;# 
  1027  0E1B                     	;# 
  1028  0E1C                     	;# 
  1029  0E1D                     	;# 
  1030  0E1E                     	;# 
  1031  0E1F                     	;# 
  1032  0E20                     	;# 
  1033  0E21                     	;# 
  1034  0E22                     	;# 
  1035  0E24                     	;# 
  1036  0E25                     	;# 
  1037  0E28                     	;# 
  1038  0E29                     	;# 
  1039  0E2A                     	;# 
  1040  0E2B                     	;# 
  1041  0E2C                     	;# 
  1042  0E2D                     	;# 
  1043  0E2E                     	;# 
  1044  0E2F                     	;# 
  1045  0E90                     	;# 
  1046  0E91                     	;# 
  1047  0E92                     	;# 
  1048  0E94                     	;# 
  1049  0E95                     	;# 
  1050  0E9C                     	;# 
  1051  0E9D                     	;# 
  1052  0E9E                     	;# 
  1053  0E9F                     	;# 
  1054  0EA0                     	;# 
  1055  0EA1                     	;# 
  1056  0EA2                     	;# 
  1057  0EA3                     	;# 
  1058  0EA4                     	;# 
  1059  0EA5                     	;# 
  1060  0EA6                     	;# 
  1061  0EA7                     	;# 
  1062  0F0F                     	;# 
  1063  0F10                     	;# 
  1064  0F11                     	;# 
  1065  0F12                     	;# 
  1066  0F13                     	;# 
  1067  0F14                     	;# 
  1068  0F15                     	;# 
  1069  0F16                     	;# 
  1070  0F17                     	;# 
  1071  0F18                     	;# 
  1072  0F19                     	;# 
  1073  0F1A                     	;# 
  1074  0F1B                     	;# 
  1075  0F1C                     	;# 
  1076  0F1D                     	;# 
  1077  0F1E                     	;# 
  1078  0F1F                     	;# 
  1079  0F20                     	;# 
  1080  0F21                     	;# 
  1081  0F22                     	;# 
  1082  0F23                     	;# 
  1083  0F24                     	;# 
  1084  0F25                     	;# 
  1085  0F26                     	;# 
  1086  0F27                     	;# 
  1087  0F28                     	;# 
  1088  0F29                     	;# 
  1089  0F2A                     	;# 
  1090  0F2B                     	;# 
  1091  0F2C                     	;# 
  1092  0F2D                     	;# 
  1093  0F2E                     	;# 
  1094  0F2F                     	;# 
  1095  0F30                     	;# 
  1096  0F31                     	;# 
  1097  0F32                     	;# 
  1098  0F33                     	;# 
  1099  0F34                     	;# 
  1100  0F35                     	;# 
  1101  0F36                     	;# 
  1102  0F37                     	;# 
  1103  0FE4                     	;# 
  1104  0FE5                     	;# 
  1105  0FE6                     	;# 
  1106  0FE7                     	;# 
  1107  0FE8                     	;# 
  1108  0FE9                     	;# 
  1109  0FEA                     	;# 
  1110  0FEB                     	;# 
  1111  0FED                     	;# 
  1112  0FEE                     	;# 
  1113  0FEF                     	;# 
  1114  0000                     	;# 
  1115  0001                     	;# 
  1116  0002                     	;# 
  1117  0003                     	;# 
  1118  0004                     	;# 
  1119  0005                     	;# 
  1120  0006                     	;# 
  1121  0007                     	;# 
  1122  0008                     	;# 
  1123  0009                     	;# 
  1124  000A                     	;# 
  1125  000B                     	;# 
  1126  000C                     	;# 
  1127  000D                     	;# 
  1128  000E                     	;# 
  1129  0010                     	;# 
  1130  0011                     	;# 
  1131  0012                     	;# 
  1132  0013                     	;# 
  1133  0014                     	;# 
  1134  0015                     	;# 
  1135  0015                     	;# 
  1136  0016                     	;# 
  1137  0016                     	;# 
  1138  0017                     	;# 
  1139  0018                     	;# 
  1140  0019                     	;# 
  1141  0019                     	;# 
  1142  001A                     	;# 
  1143  001B                     	;# 
  1144  001C                     	;# 
  1145  001D                     	;# 
  1146  001E                     	;# 
  1147  001F                     	;# 
  1148  008C                     	;# 
  1149  008D                     	;# 
  1150  008E                     	;# 
  1151  0090                     	;# 
  1152  0091                     	;# 
  1153  0092                     	;# 
  1154  0093                     	;# 
  1155  0094                     	;# 
  1156  0097                     	;# 
  1157  009B                     	;# 
  1158  009B                     	;# 
  1159  009C                     	;# 
  1160  009D                     	;# 
  1161  009E                     	;# 
  1162  009F                     	;# 
  1163  010C                     	;# 
  1164  010D                     	;# 
  1165  010E                     	;# 
  1166  0111                     	;# 
  1167  0112                     	;# 
  1168  0113                     	;# 
  1169  0114                     	;# 
  1170  0115                     	;# 
  1171  0116                     	;# 
  1172  0117                     	;# 
  1173  0118                     	;# 
  1174  0119                     	;# 
  1175  018C                     	;# 
  1176  018D                     	;# 
  1177  018E                     	;# 
  1178  0197                     	;# 
  1179  0199                     	;# 
  1180  0199                     	;# 
  1181  0199                     	;# 
  1182  019A                     	;# 
  1183  019A                     	;# 
  1184  019A                     	;# 
  1185  019B                     	;# 
  1186  019B                     	;# 
  1187  019B                     	;# 
  1188  019B                     	;# 
  1189  019B                     	;# 
  1190  019C                     	;# 
  1191  019C                     	;# 
  1192  019C                     	;# 
  1193  019D                     	;# 
  1194  019D                     	;# 
  1195  019D                     	;# 
  1196  019E                     	;# 
  1197  019E                     	;# 
  1198  019E                     	;# 
  1199  019F                     	;# 
  1200  019F                     	;# 
  1201  019F                     	;# 
  1202  019F                     	;# 
  1203  019F                     	;# 
  1204  020C                     	;# 
  1205  020D                     	;# 
  1206  020E                     	;# 
  1207  0211                     	;# 
  1208  0211                     	;# 
  1209  0212                     	;# 
  1210  0212                     	;# 
  1211  0213                     	;# 
  1212  0213                     	;# 
  1213  0214                     	;# 
  1214  0214                     	;# 
  1215  0215                     	;# 
  1216  0215                     	;# 
  1217  0215                     	;# 
  1218  0215                     	;# 
  1219  0216                     	;# 
  1220  0216                     	;# 
  1221  0217                     	;# 
  1222  0217                     	;# 
  1223  0219                     	;# 
  1224  021A                     	;# 
  1225  021B                     	;# 
  1226  021C                     	;# 
  1227  021D                     	;# 
  1228  021D                     	;# 
  1229  021E                     	;# 
  1230  021F                     	;# 
  1231  028C                     	;# 
  1232  028D                     	;# 
  1233  028E                     	;# 
  1234  0291                     	;# 
  1235  0291                     	;# 
  1236  0292                     	;# 
  1237  0293                     	;# 
  1238  0294                     	;# 
  1239  0295                     	;# 
  1240  0295                     	;# 
  1241  0296                     	;# 
  1242  0297                     	;# 
  1243  0298                     	;# 
  1244  029F                     	;# 
  1245  030C                     	;# 
  1246  030D                     	;# 
  1247  030E                     	;# 
  1248  0311                     	;# 
  1249  0311                     	;# 
  1250  0312                     	;# 
  1251  0313                     	;# 
  1252  0314                     	;# 
  1253  0315                     	;# 
  1254  0315                     	;# 
  1255  0316                     	;# 
  1256  0317                     	;# 
  1257  0318                     	;# 
  1258  038C                     	;# 
  1259  038D                     	;# 
  1260  038E                     	;# 
  1261  0391                     	;# 
  1262  0392                     	;# 
  1263  0393                     	;# 
  1264  0394                     	;# 
  1265  0395                     	;# 
  1266  0396                     	;# 
  1267  0397                     	;# 
  1268  0398                     	;# 
  1269  0399                     	;# 
  1270  039A                     	;# 
  1271  039C                     	;# 
  1272  039D                     	;# 
  1273  039E                     	;# 
  1274  039F                     	;# 
  1275  0411                     	;# 
  1276  0411                     	;# 
  1277  0412                     	;# 
  1278  0413                     	;# 
  1279  0414                     	;# 
  1280  0415                     	;# 
  1281  0416                     	;# 
  1282  0417                     	;# 
  1283  0418                     	;# 
  1284  0418                     	;# 
  1285  0419                     	;# 
  1286  041A                     	;# 
  1287  041B                     	;# 
  1288  041C                     	;# 
  1289  041D                     	;# 
  1290  041E                     	;# 
  1291  041F                     	;# 
  1292  0498                     	;# 
  1293  0498                     	;# 
  1294  0499                     	;# 
  1295  049A                     	;# 
  1296  049B                     	;# 
  1297  049B                     	;# 
  1298  049C                     	;# 
  1299  049D                     	;# 
  1300  049E                     	;# 
  1301  049F                     	;# 
  1302  0617                     	;# 
  1303  0618                     	;# 
  1304  0619                     	;# 
  1305  0619                     	;# 
  1306  061A                     	;# 
  1307  061B                     	;# 
  1308  061C                     	;# 
  1309  061C                     	;# 
  1310  061F                     	;# 
  1311  0691                     	;# 
  1312  0692                     	;# 
  1313  0693                     	;# 
  1314  0694                     	;# 
  1315  0695                     	;# 
  1316  0696                     	;# 
  1317  0697                     	;# 
  1318  0698                     	;# 
  1319  0699                     	;# 
  1320  0711                     	;# 
  1321  0712                     	;# 
  1322  0713                     	;# 
  1323  0714                     	;# 
  1324  0715                     	;# 
  1325  0716                     	;# 
  1326  0717                     	;# 
  1327  0718                     	;# 
  1328  0719                     	;# 
  1329  0891                     	;# 
  1330  0891                     	;# 
  1331  0891                     	;# 
  1332  0891                     	;# 
  1333  0891                     	;# 
  1334  0891                     	;# 
  1335  0892                     	;# 
  1336  0892                     	;# 
  1337  0892                     	;# 
  1338  0893                     	;# 
  1339  0893                     	;# 
  1340  0893                     	;# 
  1341  0893                     	;# 
  1342  0893                     	;# 
  1343  0893                     	;# 
  1344  0894                     	;# 
  1345  0894                     	;# 
  1346  0894                     	;# 
  1347  0895                     	;# 
  1348  0895                     	;# 
  1349  0895                     	;# 
  1350  0896                     	;# 
  1351  0896                     	;# 
  1352  0896                     	;# 
  1353  089B                     	;# 
  1354  0911                     	;# 
  1355  0912                     	;# 
  1356  0913                     	;# 
  1357  0914                     	;# 
  1358  0915                     	;# 
  1359  0916                     	;# 
  1360  0918                     	;# 
  1361  0919                     	;# 
  1362  091A                     	;# 
  1363  091B                     	;# 
  1364  091C                     	;# 
  1365  091D                     	;# 
  1366  091E                     	;# 
  1367  091F                     	;# 
  1368  0E0F                     	;# 
  1369  0E10                     	;# 
  1370  0E11                     	;# 
  1371  0E12                     	;# 
  1372  0E13                     	;# 
  1373  0E14                     	;# 
  1374  0E15                     	;# 
  1375  0E16                     	;# 
  1376  0E17                     	;# 
  1377  0E18                     	;# 
  1378  0E19                     	;# 
  1379  0E1A                     	;# 
  1380  0E1B                     	;# 
  1381  0E1C                     	;# 
  1382  0E1D                     	;# 
  1383  0E1E                     	;# 
  1384  0E1F                     	;# 
  1385  0E20                     	;# 
  1386  0E21                     	;# 
  1387  0E22                     	;# 
  1388  0E24                     	;# 
  1389  0E25                     	;# 
  1390  0E28                     	;# 
  1391  0E29                     	;# 
  1392  0E2A                     	;# 
  1393  0E2B                     	;# 
  1394  0E2C                     	;# 
  1395  0E2D                     	;# 
  1396  0E2E                     	;# 
  1397  0E2F                     	;# 
  1398  0E90                     	;# 
  1399  0E91                     	;# 
  1400  0E92                     	;# 
  1401  0E94                     	;# 
  1402  0E95                     	;# 
  1403  0E9C                     	;# 
  1404  0E9D                     	;# 
  1405  0E9E                     	;# 
  1406  0E9F                     	;# 
  1407  0EA0                     	;# 
  1408  0EA1                     	;# 
  1409  0EA2                     	;# 
  1410  0EA3                     	;# 
  1411  0EA4                     	;# 
  1412  0EA5                     	;# 
  1413  0EA6                     	;# 
  1414  0EA7                     	;# 
  1415  0F0F                     	;# 
  1416  0F10                     	;# 
  1417  0F11                     	;# 
  1418  0F12                     	;# 
  1419  0F13                     	;# 
  1420  0F14                     	;# 
  1421  0F15                     	;# 
  1422  0F16                     	;# 
  1423  0F17                     	;# 
  1424  0F18                     	;# 
  1425  0F19                     	;# 
  1426  0F1A                     	;# 
  1427  0F1B                     	;# 
  1428  0F1C                     	;# 
  1429  0F1D                     	;# 
  1430  0F1E                     	;# 
  1431  0F1F                     	;# 
  1432  0F20                     	;# 
  1433  0F21                     	;# 
  1434  0F22                     	;# 
  1435  0F23                     	;# 
  1436  0F24                     	;# 
  1437  0F25                     	;# 
  1438  0F26                     	;# 
  1439  0F27                     	;# 
  1440  0F28                     	;# 
  1441  0F29                     	;# 
  1442  0F2A                     	;# 
  1443  0F2B                     	;# 
  1444  0F2C                     	;# 
  1445  0F2D                     	;# 
  1446  0F2E                     	;# 
  1447  0F2F                     	;# 
  1448  0F30                     	;# 
  1449  0F31                     	;# 
  1450  0F32                     	;# 
  1451  0F33                     	;# 
  1452  0F34                     	;# 
  1453  0F35                     	;# 
  1454  0F36                     	;# 
  1455  0F37                     	;# 
  1456  0FE4                     	;# 
  1457  0FE5                     	;# 
  1458  0FE6                     	;# 
  1459  0FE7                     	;# 
  1460  0FE8                     	;# 
  1461  0FE9                     	;# 
  1462  0FEA                     	;# 
  1463  0FEB                     	;# 
  1464  0FED                     	;# 
  1465  0FEE                     	;# 
  1466  0FEF                     	;# 
  1467  0000                     	;# 
  1468  0001                     	;# 
  1469  0002                     	;# 
  1470  0003                     	;# 
  1471  0004                     	;# 
  1472  0005                     	;# 
  1473  0006                     	;# 
  1474  0007                     	;# 
  1475  0008                     	;# 
  1476  0009                     	;# 
  1477  000A                     	;# 
  1478  000B                     	;# 
  1479  000C                     	;# 
  1480  000D                     	;# 
  1481  000E                     	;# 
  1482  0010                     	;# 
  1483  0011                     	;# 
  1484  0012                     	;# 
  1485  0013                     	;# 
  1486  0014                     	;# 
  1487  0015                     	;# 
  1488  0015                     	;# 
  1489  0016                     	;# 
  1490  0016                     	;# 
  1491  0017                     	;# 
  1492  0018                     	;# 
  1493  0019                     	;# 
  1494  0019                     	;# 
  1495  001A                     	;# 
  1496  001B                     	;# 
  1497  001C                     	;# 
  1498  001D                     	;# 
  1499  001E                     	;# 
  1500  001F                     	;# 
  1501  008C                     	;# 
  1502  008D                     	;# 
  1503  008E                     	;# 
  1504  0090                     	;# 
  1505  0091                     	;# 
  1506  0092                     	;# 
  1507  0093                     	;# 
  1508  0094                     	;# 
  1509  0097                     	;# 
  1510  009B                     	;# 
  1511  009B                     	;# 
  1512  009C                     	;# 
  1513  009D                     	;# 
  1514  009E                     	;# 
  1515  009F                     	;# 
  1516  010C                     	;# 
  1517  010D                     	;# 
  1518  010E                     	;# 
  1519  0111                     	;# 
  1520  0112                     	;# 
  1521  0113                     	;# 
  1522  0114                     	;# 
  1523  0115                     	;# 
  1524  0116                     	;# 
  1525  0117                     	;# 
  1526  0118                     	;# 
  1527  0119                     	;# 
  1528  018C                     	;# 
  1529  018D                     	;# 
  1530  018E                     	;# 
  1531  0197                     	;# 
  1532  0199                     	;# 
  1533  0199                     	;# 
  1534  0199                     	;# 
  1535  019A                     	;# 
  1536  019A                     	;# 
  1537  019A                     	;# 
  1538  019B                     	;# 
  1539  019B                     	;# 
  1540  019B                     	;# 
  1541  019B                     	;# 
  1542  019B                     	;# 
  1543  019C                     	;# 
  1544  019C                     	;# 
  1545  019C                     	;# 
  1546  019D                     	;# 
  1547  019D                     	;# 
  1548  019D                     	;# 
  1549  019E                     	;# 
  1550  019E                     	;# 
  1551  019E                     	;# 
  1552  019F                     	;# 
  1553  019F                     	;# 
  1554  019F                     	;# 
  1555  019F                     	;# 
  1556  019F                     	;# 
  1557  020C                     	;# 
  1558  020D                     	;# 
  1559  020E                     	;# 
  1560  0211                     	;# 
  1561  0211                     	;# 
  1562  0212                     	;# 
  1563  0212                     	;# 
  1564  0213                     	;# 
  1565  0213                     	;# 
  1566  0214                     	;# 
  1567  0214                     	;# 
  1568  0215                     	;# 
  1569  0215                     	;# 
  1570  0215                     	;# 
  1571  0215                     	;# 
  1572  0216                     	;# 
  1573  0216                     	;# 
  1574  0217                     	;# 
  1575  0217                     	;# 
  1576  0219                     	;# 
  1577  021A                     	;# 
  1578  021B                     	;# 
  1579  021C                     	;# 
  1580  021D                     	;# 
  1581  021D                     	;# 
  1582  021E                     	;# 
  1583  021F                     	;# 
  1584  028C                     	;# 
  1585  028D                     	;# 
  1586  028E                     	;# 
  1587  0291                     	;# 
  1588  0291                     	;# 
  1589  0292                     	;# 
  1590  0293                     	;# 
  1591  0294                     	;# 
  1592  0295                     	;# 
  1593  0295                     	;# 
  1594  0296                     	;# 
  1595  0297                     	;# 
  1596  0298                     	;# 
  1597  029F                     	;# 
  1598  030C                     	;# 
  1599  030D                     	;# 
  1600  030E                     	;# 
  1601  0311                     	;# 
  1602  0311                     	;# 
  1603  0312                     	;# 
  1604  0313                     	;# 
  1605  0314                     	;# 
  1606  0315                     	;# 
  1607  0315                     	;# 
  1608  0316                     	;# 
  1609  0317                     	;# 
  1610  0318                     	;# 
  1611  038C                     	;# 
  1612  038D                     	;# 
  1613  038E                     	;# 
  1614  0391                     	;# 
  1615  0392                     	;# 
  1616  0393                     	;# 
  1617  0394                     	;# 
  1618  0395                     	;# 
  1619  0396                     	;# 
  1620  0397                     	;# 
  1621  0398                     	;# 
  1622  0399                     	;# 
  1623  039A                     	;# 
  1624  039C                     	;# 
  1625  039D                     	;# 
  1626  039E                     	;# 
  1627  039F                     	;# 
  1628  0411                     	;# 
  1629  0411                     	;# 
  1630  0412                     	;# 
  1631  0413                     	;# 
  1632  0414                     	;# 
  1633  0415                     	;# 
  1634  0416                     	;# 
  1635  0417                     	;# 
  1636  0418                     	;# 
  1637  0418                     	;# 
  1638  0419                     	;# 
  1639  041A                     	;# 
  1640  041B                     	;# 
  1641  041C                     	;# 
  1642  041D                     	;# 
  1643  041E                     	;# 
  1644  041F                     	;# 
  1645  0498                     	;# 
  1646  0498                     	;# 
  1647  0499                     	;# 
  1648  049A                     	;# 
  1649  049B                     	;# 
  1650  049B                     	;# 
  1651  049C                     	;# 
  1652  049D                     	;# 
  1653  049E                     	;# 
  1654  049F                     	;# 
  1655  0617                     	;# 
  1656  0618                     	;# 
  1657  0619                     	;# 
  1658  0619                     	;# 
  1659  061A                     	;# 
  1660  061B                     	;# 
  1661  061C                     	;# 
  1662  061C                     	;# 
  1663  061F                     	;# 
  1664  0691                     	;# 
  1665  0692                     	;# 
  1666  0693                     	;# 
  1667  0694                     	;# 
  1668  0695                     	;# 
  1669  0696                     	;# 
  1670  0697                     	;# 
  1671  0698                     	;# 
  1672  0699                     	;# 
  1673  0711                     	;# 
  1674  0712                     	;# 
  1675  0713                     	;# 
  1676  0714                     	;# 
  1677  0715                     	;# 
  1678  0716                     	;# 
  1679  0717                     	;# 
  1680  0718                     	;# 
  1681  0719                     	;# 
  1682  0891                     	;# 
  1683  0891                     	;# 
  1684  0891                     	;# 
  1685  0891                     	;# 
  1686  0891                     	;# 
  1687  0891                     	;# 
  1688  0892                     	;# 
  1689  0892                     	;# 
  1690  0892                     	;# 
  1691  0893                     	;# 
  1692  0893                     	;# 
  1693  0893                     	;# 
  1694  0893                     	;# 
  1695  0893                     	;# 
  1696  0893                     	;# 
  1697  0894                     	;# 
  1698  0894                     	;# 
  1699  0894                     	;# 
  1700  0895                     	;# 
  1701  0895                     	;# 
  1702  0895                     	;# 
  1703  0896                     	;# 
  1704  0896                     	;# 
  1705  0896                     	;# 
  1706  089B                     	;# 
  1707  0911                     	;# 
  1708  0912                     	;# 
  1709  0913                     	;# 
  1710  0914                     	;# 
  1711  0915                     	;# 
  1712  0916                     	;# 
  1713  0918                     	;# 
  1714  0919                     	;# 
  1715  091A                     	;# 
  1716  091B                     	;# 
  1717  091C                     	;# 
  1718  091D                     	;# 
  1719  091E                     	;# 
  1720  091F                     	;# 
  1721  0E0F                     	;# 
  1722  0E10                     	;# 
  1723  0E11                     	;# 
  1724  0E12                     	;# 
  1725  0E13                     	;# 
  1726  0E14                     	;# 
  1727  0E15                     	;# 
  1728  0E16                     	;# 
  1729  0E17                     	;# 
  1730  0E18                     	;# 
  1731  0E19                     	;# 
  1732  0E1A                     	;# 
  1733  0E1B                     	;# 
  1734  0E1C                     	;# 
  1735  0E1D                     	;# 
  1736  0E1E                     	;# 
  1737  0E1F                     	;# 
  1738  0E20                     	;# 
  1739  0E21                     	;# 
  1740  0E22                     	;# 
  1741  0E24                     	;# 
  1742  0E25                     	;# 
  1743  0E28                     	;# 
  1744  0E29                     	;# 
  1745  0E2A                     	;# 
  1746  0E2B                     	;# 
  1747  0E2C                     	;# 
  1748  0E2D                     	;# 
  1749  0E2E                     	;# 
  1750  0E2F                     	;# 
  1751  0E90                     	;# 
  1752  0E91                     	;# 
  1753  0E92                     	;# 
  1754  0E94                     	;# 
  1755  0E95                     	;# 
  1756  0E9C                     	;# 
  1757  0E9D                     	;# 
  1758  0E9E                     	;# 
  1759  0E9F                     	;# 
  1760  0EA0                     	;# 
  1761  0EA1                     	;# 
  1762  0EA2                     	;# 
  1763  0EA3                     	;# 
  1764  0EA4                     	;# 
  1765  0EA5                     	;# 
  1766  0EA6                     	;# 
  1767  0EA7                     	;# 
  1768  0F0F                     	;# 
  1769  0F10                     	;# 
  1770  0F11                     	;# 
  1771  0F12                     	;# 
  1772  0F13                     	;# 
  1773  0F14                     	;# 
  1774  0F15                     	;# 
  1775  0F16                     	;# 
  1776  0F17                     	;# 
  1777  0F18                     	;# 
  1778  0F19                     	;# 
  1779  0F1A                     	;# 
  1780  0F1B                     	;# 
  1781  0F1C                     	;# 
  1782  0F1D                     	;# 
  1783  0F1E                     	;# 
  1784  0F1F                     	;# 
  1785  0F20                     	;# 
  1786  0F21                     	;# 
  1787  0F22                     	;# 
  1788  0F23                     	;# 
  1789  0F24                     	;# 
  1790  0F25                     	;# 
  1791  0F26                     	;# 
  1792  0F27                     	;# 
  1793  0F28                     	;# 
  1794  0F29                     	;# 
  1795  0F2A                     	;# 
  1796  0F2B                     	;# 
  1797  0F2C                     	;# 
  1798  0F2D                     	;# 
  1799  0F2E                     	;# 
  1800  0F2F                     	;# 
  1801  0F30                     	;# 
  1802  0F31                     	;# 
  1803  0F32                     	;# 
  1804  0F33                     	;# 
  1805  0F34                     	;# 
  1806  0F35                     	;# 
  1807  0F36                     	;# 
  1808  0F37                     	;# 
  1809  0FE4                     	;# 
  1810  0FE5                     	;# 
  1811  0FE6                     	;# 
  1812  0FE7                     	;# 
  1813  0FE8                     	;# 
  1814  0FE9                     	;# 
  1815  0FEA                     	;# 
  1816  0FEB                     	;# 
  1817  0FED                     	;# 
  1818  0FEE                     	;# 
  1819  0FEF                     	;# 
  1820  0000                     	;# 
  1821  0001                     	;# 
  1822  0002                     	;# 
  1823  0003                     	;# 
  1824  0004                     	;# 
  1825  0005                     	;# 
  1826  0006                     	;# 
  1827  0007                     	;# 
  1828  0008                     	;# 
  1829  0009                     	;# 
  1830  000A                     	;# 
  1831  000B                     	;# 
  1832  000C                     	;# 
  1833  000D                     	;# 
  1834  000E                     	;# 
  1835  0010                     	;# 
  1836  0011                     	;# 
  1837  0012                     	;# 
  1838  0013                     	;# 
  1839  0014                     	;# 
  1840  0015                     	;# 
  1841  0015                     	;# 
  1842  0016                     	;# 
  1843  0016                     	;# 
  1844  0017                     	;# 
  1845  0018                     	;# 
  1846  0019                     	;# 
  1847  0019                     	;# 
  1848  001A                     	;# 
  1849  001B                     	;# 
  1850  001C                     	;# 
  1851  001D                     	;# 
  1852  001E                     	;# 
  1853  001F                     	;# 
  1854  008C                     	;# 
  1855  008D                     	;# 
  1856  008E                     	;# 
  1857  0090                     	;# 
  1858  0091                     	;# 
  1859  0092                     	;# 
  1860  0093                     	;# 
  1861  0094                     	;# 
  1862  0097                     	;# 
  1863  009B                     	;# 
  1864  009B                     	;# 
  1865  009C                     	;# 
  1866  009D                     	;# 
  1867  009E                     	;# 
  1868  009F                     	;# 
  1869  010C                     	;# 
  1870  010D                     	;# 
  1871  010E                     	;# 
  1872  0111                     	;# 
  1873  0112                     	;# 
  1874  0113                     	;# 
  1875  0114                     	;# 
  1876  0115                     	;# 
  1877  0116                     	;# 
  1878  0117                     	;# 
  1879  0118                     	;# 
  1880  0119                     	;# 
  1881  018C                     	;# 
  1882  018D                     	;# 
  1883  018E                     	;# 
  1884  0197                     	;# 
  1885  0199                     	;# 
  1886  0199                     	;# 
  1887  0199                     	;# 
  1888  019A                     	;# 
  1889  019A                     	;# 
  1890  019A                     	;# 
  1891  019B                     	;# 
  1892  019B                     	;# 
  1893  019B                     	;# 
  1894  019B                     	;# 
  1895  019B                     	;# 
  1896  019C                     	;# 
  1897  019C                     	;# 
  1898  019C                     	;# 
  1899  019D                     	;# 
  1900  019D                     	;# 
  1901  019D                     	;# 
  1902  019E                     	;# 
  1903  019E                     	;# 
  1904  019E                     	;# 
  1905  019F                     	;# 
  1906  019F                     	;# 
  1907  019F                     	;# 
  1908  019F                     	;# 
  1909  019F                     	;# 
  1910  020C                     	;# 
  1911  020D                     	;# 
  1912  020E                     	;# 
  1913  0211                     	;# 
  1914  0211                     	;# 
  1915  0212                     	;# 
  1916  0212                     	;# 
  1917  0213                     	;# 
  1918  0213                     	;# 
  1919  0214                     	;# 
  1920  0214                     	;# 
  1921  0215                     	;# 
  1922  0215                     	;# 
  1923  0215                     	;# 
  1924  0215                     	;# 
  1925  0216                     	;# 
  1926  0216                     	;# 
  1927  0217                     	;# 
  1928  0217                     	;# 
  1929  0219                     	;# 
  1930  021A                     	;# 
  1931  021B                     	;# 
  1932  021C                     	;# 
  1933  021D                     	;# 
  1934  021D                     	;# 
  1935  021E                     	;# 
  1936  021F                     	;# 
  1937  028C                     	;# 
  1938  028D                     	;# 
  1939  028E                     	;# 
  1940  0291                     	;# 
  1941  0291                     	;# 
  1942  0292                     	;# 
  1943  0293                     	;# 
  1944  0294                     	;# 
  1945  0295                     	;# 
  1946  0295                     	;# 
  1947  0296                     	;# 
  1948  0297                     	;# 
  1949  0298                     	;# 
  1950  029F                     	;# 
  1951  030C                     	;# 
  1952  030D                     	;# 
  1953  030E                     	;# 
  1954  0311                     	;# 
  1955  0311                     	;# 
  1956  0312                     	;# 
  1957  0313                     	;# 
  1958  0314                     	;# 
  1959  0315                     	;# 
  1960  0315                     	;# 
  1961  0316                     	;# 
  1962  0317                     	;# 
  1963  0318                     	;# 
  1964  038C                     	;# 
  1965  038D                     	;# 
  1966  038E                     	;# 
  1967  0391                     	;# 
  1968  0392                     	;# 
  1969  0393                     	;# 
  1970  0394                     	;# 
  1971  0395                     	;# 
  1972  0396                     	;# 
  1973  0397                     	;# 
  1974  0398                     	;# 
  1975  0399                     	;# 
  1976  039A                     	;# 
  1977  039C                     	;# 
  1978  039D                     	;# 
  1979  039E                     	;# 
  1980  039F                     	;# 
  1981  0411                     	;# 
  1982  0411                     	;# 
  1983  0412                     	;# 
  1984  0413                     	;# 
  1985  0414                     	;# 
  1986  0415                     	;# 
  1987  0416                     	;# 
  1988  0417                     	;# 
  1989  0418                     	;# 
  1990  0418                     	;# 
  1991  0419                     	;# 
  1992  041A                     	;# 
  1993  041B                     	;# 
  1994  041C                     	;# 
  1995  041D                     	;# 
  1996  041E                     	;# 
  1997  041F                     	;# 
  1998  0498                     	;# 
  1999  0498                     	;# 
  2000  0499                     	;# 
  2001  049A                     	;# 
  2002  049B                     	;# 
  2003  049B                     	;# 
  2004  049C                     	;# 
  2005  049D                     	;# 
  2006  049E                     	;# 
  2007  049F                     	;# 
  2008  0617                     	;# 
  2009  0618                     	;# 
  2010  0619                     	;# 
  2011  0619                     	;# 
  2012  061A                     	;# 
  2013  061B                     	;# 
  2014  061C                     	;# 
  2015  061C                     	;# 
  2016  061F                     	;# 
  2017  0691                     	;# 
  2018  0692                     	;# 
  2019  0693                     	;# 
  2020  0694                     	;# 
  2021  0695                     	;# 
  2022  0696                     	;# 
  2023  0697                     	;# 
  2024  0698                     	;# 
  2025  0699                     	;# 
  2026  0711                     	;# 
  2027  0712                     	;# 
  2028  0713                     	;# 
  2029  0714                     	;# 
  2030  0715                     	;# 
  2031  0716                     	;# 
  2032  0717                     	;# 
  2033  0718                     	;# 
  2034  0719                     	;# 
  2035  0891                     	;# 
  2036  0891                     	;# 
  2037  0891                     	;# 
  2038  0891                     	;# 
  2039  0891                     	;# 
  2040  0891                     	;# 
  2041  0892                     	;# 
  2042  0892                     	;# 
  2043  0892                     	;# 
  2044  0893                     	;# 
  2045  0893                     	;# 
  2046  0893                     	;# 
  2047  0893                     	;# 
  2048  0893                     	;# 
  2049  0893                     	;# 
  2050  0894                     	;# 
  2051  0894                     	;# 
  2052  0894                     	;# 
  2053  0895                     	;# 
  2054  0895                     	;# 
  2055  0895                     	;# 
  2056  0896                     	;# 
  2057  0896                     	;# 
  2058  0896                     	;# 
  2059  089B                     	;# 
  2060  0911                     	;# 
  2061  0912                     	;# 
  2062  0913                     	;# 
  2063  0914                     	;# 
  2064  0915                     	;# 
  2065  0916                     	;# 
  2066  0918                     	;# 
  2067  0919                     	;# 
  2068  091A                     	;# 
  2069  091B                     	;# 
  2070  091C                     	;# 
  2071  091D                     	;# 
  2072  091E                     	;# 
  2073  091F                     	;# 
  2074  0E0F                     	;# 
  2075  0E10                     	;# 
  2076  0E11                     	;# 
  2077  0E12                     	;# 
  2078  0E13                     	;# 
  2079  0E14                     	;# 
  2080  0E15                     	;# 
  2081  0E16                     	;# 
  2082  0E17                     	;# 
  2083  0E18                     	;# 
  2084  0E19                     	;# 
  2085  0E1A                     	;# 
  2086  0E1B                     	;# 
  2087  0E1C                     	;# 
  2088  0E1D                     	;# 
  2089  0E1E                     	;# 
  2090  0E1F                     	;# 
  2091  0E20                     	;# 
  2092  0E21                     	;# 
  2093  0E22                     	;# 
  2094  0E24                     	;# 
  2095  0E25                     	;# 
  2096  0E28                     	;# 
  2097  0E29                     	;# 
  2098  0E2A                     	;# 
  2099  0E2B                     	;# 
  2100  0E2C                     	;# 
  2101  0E2D                     	;# 
  2102  0E2E                     	;# 
  2103  0E2F                     	;# 
  2104  0E90                     	;# 
  2105  0E91                     	;# 
  2106  0E92                     	;# 
  2107  0E94                     	;# 
  2108  0E95                     	;# 
  2109  0E9C                     	;# 
  2110  0E9D                     	;# 
  2111  0E9E                     	;# 
  2112  0E9F                     	;# 
  2113  0EA0                     	;# 
  2114  0EA1                     	;# 
  2115  0EA2                     	;# 
  2116  0EA3                     	;# 
  2117  0EA4                     	;# 
  2118  0EA5                     	;# 
  2119  0EA6                     	;# 
  2120  0EA7                     	;# 
  2121  0F0F                     	;# 
  2122  0F10                     	;# 
  2123  0F11                     	;# 
  2124  0F12                     	;# 
  2125  0F13                     	;# 
  2126  0F14                     	;# 
  2127  0F15                     	;# 
  2128  0F16                     	;# 
  2129  0F17                     	;# 
  2130  0F18                     	;# 
  2131  0F19                     	;# 
  2132  0F1A                     	;# 
  2133  0F1B                     	;# 
  2134  0F1C                     	;# 
  2135  0F1D                     	;# 
  2136  0F1E                     	;# 
  2137  0F1F                     	;# 
  2138  0F20                     	;# 
  2139  0F21                     	;# 
  2140  0F22                     	;# 
  2141  0F23                     	;# 
  2142  0F24                     	;# 
  2143  0F25                     	;# 
  2144  0F26                     	;# 
  2145  0F27                     	;# 
  2146  0F28                     	;# 
  2147  0F29                     	;# 
  2148  0F2A                     	;# 
  2149  0F2B                     	;# 
  2150  0F2C                     	;# 
  2151  0F2D                     	;# 
  2152  0F2E                     	;# 
  2153  0F2F                     	;# 
  2154  0F30                     	;# 
  2155  0F31                     	;# 
  2156  0F32                     	;# 
  2157  0F33                     	;# 
  2158  0F34                     	;# 
  2159  0F35                     	;# 
  2160  0F36                     	;# 
  2161  0F37                     	;# 
  2162  0FE4                     	;# 
  2163  0FE5                     	;# 
  2164  0FE6                     	;# 
  2165  0FE7                     	;# 
  2166  0FE8                     	;# 
  2167  0FE9                     	;# 
  2168  0FEA                     	;# 
  2169  0FEB                     	;# 
  2170  0FED                     	;# 
  2171  0FEE                     	;# 
  2172  0FEF                     	;# 
  2173                           
  2174                           	psect	idataBANK0
  2175  0000                     __pidataBANK0:	
  2176  0011                     _PIR1bits	set	17
  2177  008E                     _TRISC	set	142
  2178  008D                     _TRISB	set	141
  2179  008C                     _TRISA	set	140
  2180  010E                     _LATC	set	270
  2181  010D                     _LATB	set	269
  2182  010C                     _LATA	set	268
  2183  010D                     _LATBbits	set	269
  2184  018C                     _ANSELA	set	396
  2185  018D                     _ANSELB	set	397
  2186  018E                     _ANSELC	set	398
  2187  019E                     _TXSTAbits	set	414
  2188  019A                     _TX1REG	set	410
  2189  0199                     _RC1REG	set	409
  2190  019D                     _RC1STAbits	set	413
  2191  019C                     _SP1BRGH	set	412
  2192  019B                     _SP1BRGL	set	411
  2193  019E                     _TX1STA	set	414
  2194  019D                     _RC1STA	set	413
  2195  019F                     _BAUD1CON	set	415
  2196  0199                     _RCREG	set	409
  2197  0CF1                     _TRMT	set	3313
  2198  020E                     _WPUC	set	526
  2199  020C                     _WPUA	set	524
  2200  020D                     _WPUB	set	525
  2201  028E                     _ODCONC	set	654
  2202  028D                     _ODCONB	set	653
  2203  028C                     _ODCONA	set	652
  2204  0893                     _NVMDAT	set	2195
  2205  0891                     _NVMADR	set	2193
  2206  0896                     _NVMCON2	set	2198
  2207  0894                     _NVMDATH	set	2196
  2208  0891                     _NVMADRL	set	2193
  2209  0893                     _NVMDATL	set	2195
  2210  0895                     _NVMCON1bits	set	2197
  2211  0895                     _NVMCON1	set	2197
  2212  091E                     _OSCTUNE	set	2334
  2213  091F                     _OSCFRQ	set	2335
  2214  091D                     _OSCEN	set	2333
  2215  091B                     _OSCCON3	set	2331
  2216  0919                     _OSCCON1	set	2329
  2217  0E24                     _RXPPSbits	set	3620
  2218  0E0F                     _PPSLOCKbits	set	3599
  2219  0E0F                     _PPSLOCK	set	3599
  2220  0E9C                     _RB4PPSbits	set	3740
  2221  0FED                     _STKPTR	set	4077
  2222                           
  2223                           	psect	stringtext1
  2224  02CB                     __pstringtext1:	
  2225  02CB                     STR_2:	
  2226  02CB  3441               	retlw	65	;'A'
  2227  02CC  3454               	retlw	84	;'T'
  2228  02CD  342B               	retlw	43	;'+'
  2229  02CE  344D               	retlw	77	;'M'
  2230  02CF  344F               	retlw	79	;'O'
  2231  02D0  3444               	retlw	68	;'D'
  2232  02D1  3445               	retlw	69	;'E'
  2233  02D2  343D               	retlw	61	;'='
  2234  02D3  3444               	retlw	68	;'D'
  2235  02D4  3441               	retlw	65	;'A'
  2236  02D5  3454               	retlw	84	;'T'
  2237  02D6  3441               	retlw	65	;'A'
  2238  02D7  340D               	retlw	13
  2239  02D8  340A               	retlw	10
  2240  02D9  3400               	retlw	0
  2241                           
  2242                           	psect	stringtext2
  2243  02DA                     __pstringtext2:	
  2244  02DA                     STR_1:	
  2245  02DA  3441               	retlw	65	;'A'
  2246  02DB  3454               	retlw	84	;'T'
  2247  02DC  342B               	retlw	43	;'+'
  2248  02DD  3453               	retlw	83	;'S'
  2249  02DE  3445               	retlw	69	;'E'
  2250  02DF  3454               	retlw	84	;'T'
  2251  02E0  343D               	retlw	61	;'='
  2252  02E1  3431               	retlw	49	;'1'
  2253  02E2  340D               	retlw	13
  2254  02E3  340A               	retlw	10
  2255  02E4  3400               	retlw	0
  2256                           
  2257                           	psect	stringtext3
  2258  0000                     __pstringtext3:	
  2259                           
  2260                           ; #config settings
  2261  0000                     
  2262                           	psect	cinit
  2263  000C                     start_initialization:	
  2264  000C                     __initialization:	
  2265                           
  2266                           ;initializer for BLE_SendCMD@F7866
  2267  000C  3041               	movlw	65
  2268  000D  00A9               	movwf	__pdataBANK0& (0+127)
  2269  000E  3054               	movlw	84
  2270  000F  00AA               	movwf	(__pdataBANK0+1)& (0+127)
  2271  0010  302B               	movlw	43
  2272  0011  00AB               	movwf	(__pdataBANK0+2)& (0+127)
  2273  0012  304F               	movlw	79
  2274  0013  00AC               	movwf	(__pdataBANK0+3)& (0+127)
  2275  0014  304B               	movlw	75
  2276  0015  00AD               	movwf	(__pdataBANK0+4)& (0+127)
  2277  0016  300D               	movlw	13
  2278  0017  00AE               	movwf	(__pdataBANK0+5)& (0+127)
  2279  0018  300A               	movlw	10
  2280  0019  00AF               	movwf	(__pdataBANK0+6)& (0+127)
  2281  001A  30A0               	movlw	low __pbssBANK1
  2282                           
  2283                           ; Clear objects allocated to COMMON
  2284  001B  01F9               	clrf	__pbssCOMMON& (0+127)
  2285                           
  2286                           ; Clear objects allocated to BANK1
  2287  001C  0084               	movwf	4
  2288  001D  3000               	movlw	high __pbssBANK1
  2289  001E  0085               	movwf	5
  2290  001F  3044               	movlw	68
  2291  0020  3182  22E5  3180   	fcall	clear_ram0
  2292  0023                     end_of_initialization:	
  2293                           ;End of C runtime variable initialization code
  2294                           
  2295  0023                     __end_of__initialization:	
  2296  0023  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2297  0024  0020               	movlb	0
  2298  0025  2826               	ljmp	_main	;jump to C main() function
  2299  0026                     __pmaintext:	
  2300 ;;
  2301 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2302 ;;
  2303 ;; *************** function _main *****************
  2304 ;; Defined at:
  2305 ;;		line 116 in file "src/main.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;		None
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;		None
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  1    wreg      void 
  2312 ;; Registers used:
  2313 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : B1F/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2323 ;;Total ram usage:        0 bytes
  2324 ;; Hardware stack levels required when called:    6
  2325 ;; This function calls:
  2326 ;;		_BOOTLOADER_Initialize
  2327 ;; This function is called by:
  2328 ;;		Startup code after reset
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           
  2333                           ;psect for function _main
  2334  0026                     _main:	
  2335                           
  2336                           ;main.c: 118: BOOTLOADER_Initialize();
  2337                           
  2338                           ;incstack = 0
  2339                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2340  0026  2029               	fcall	_BOOTLOADER_Initialize
  2341  0027  3180  280A         	ljmp	start
  2342  0029                     __end_of_main:	
  2343  0029                     __ptext1:	
  2344 ;; *************** function _BOOTLOADER_Initialize *****************
  2345 ;; Defined at:
  2346 ;;		line 160 in file "src/pic16f1_bootload.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;		None
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;		None
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      void 
  2353 ;; Registers used:
  2354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2355 ;; Tracked objects:
  2356 ;;		On entry : B1F/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2364 ;;Total ram usage:        0 bytes
  2365 ;; Hardware stack levels used:    1
  2366 ;; Hardware stack levels required when called:    5
  2367 ;; This function calls:
  2368 ;;		_BLE_Init
  2369 ;;		_Bootload_Required
  2370 ;;		_Run_Bootloader
  2371 ;;		_SYSTEM_Initialize
  2372 ;; This function is called by:
  2373 ;;		_main
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           
  2378                           ;psect for function _BOOTLOADER_Initialize
  2379  0029                     _BOOTLOADER_Initialize:	
  2380                           
  2381                           ;pic16f1_bootload.c: 162: if (Bootload_Required () == 1)
  2382                           
  2383                           ;incstack = 0
  2384                           ; Regs used in _BOOTLOADER_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2385  0029  210D  3180         	fcall	_Bootload_Required
  2386  002B  3A01               	xorlw	1
  2387  002C  1D03               	skipz
  2388  002D  2833               	goto	l1370
  2389                           
  2390                           ;pic16f1_bootload.c: 163: {
  2391                           ;pic16f1_bootload.c: 164: SYSTEM_Initialize();
  2392  002E  225D  3180         	fcall	_SYSTEM_Initialize
  2393                           
  2394                           ;pic16f1_bootload.c: 165: BLE_Init();
  2395  0030  2091  3180         	fcall	_BLE_Init
  2396                           
  2397                           ;pic16f1_bootload.c: 167: Run_Bootloader ();
  2398  0032  2039               	fcall	_Run_Bootloader
  2399  0033                     l1370:	
  2400                           
  2401                           ;pic16f1_bootload.c: 169: }
  2402                           ;pic16f1_bootload.c: 170: STKPTR = 0x1F;
  2403  0033  301F               	movlw	31
  2404  0034  003F               	movlb	31	; select bank31
  2405  0035  00ED               	movwf	109	;volsfr
  2406  0036  3184               	pagesel	1024	;# 
  2407  0037  2C00               	goto	1024	;# 
  2408  0038  0008               	return
  2409  0039                     __end_of_BOOTLOADER_Initialize:	
  2410  0039                     __ptext6:	
  2411 ;; *************** function _Run_Bootloader *****************
  2412 ;; Defined at:
  2413 ;;		line 15 in file "src/pic16f1_uart.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;		None
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  idle_count      2    1[BANK0 ] unsigned int 
  2418 ;;  index           1    5[BANK0 ] unsigned char 
  2419 ;;  msg_length      1    4[BANK0 ] unsigned char 
  2420 ;;  receiving       1    3[BANK0 ] unsigned char 
  2421 ;;  ch              1    0[BANK0 ] unsigned char 
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  1    wreg      void 
  2424 ;; Registers used:
  2425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/3
  2428 ;;		On exit  : 1F/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2432 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2434 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2435 ;;Total ram usage:        6 bytes
  2436 ;; Hardware stack levels used:    1
  2437 ;; Hardware stack levels required when called:    4
  2438 ;; This function calls:
  2439 ;;		_BLE_SendData
  2440 ;;		_Check_Device_Reset
  2441 ;;		_EUSART_Read
  2442 ;;		_ProcessBootBuffer
  2443 ;; This function is called by:
  2444 ;;		_BOOTLOADER_Initialize
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           
  2449                           ;psect for function _Run_Bootloader
  2450  0039                     _Run_Bootloader:	
  2451                           
  2452                           ;pic16f1_uart.c: 17: uint8_t index = 0;
  2453                           
  2454                           ;incstack = 0
  2455                           ; Regs used in _Run_Bootloader: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2456  0039  0020               	movlb	0	; select bank0
  2457  003A  3004               	movlw	4
  2458  003B  01A5               	clrf	Run_Bootloader@index
  2459                           
  2460                           ;pic16f1_uart.c: 18: uint8_t msg_length = 4;
  2461  003C  00A4               	movwf	Run_Bootloader@msg_length
  2462                           
  2463                           ;pic16f1_uart.c: 19: uint8_t ch;
  2464                           ;pic16f1_uart.c: 20: bool receiving = 0;
  2465  003D  01A3               	clrf	Run_Bootloader@receiving
  2466                           
  2467                           ;pic16f1_uart.c: 21: uint16_t idle_count = 0;
  2468  003E  01A1               	clrf	Run_Bootloader@idle_count
  2469  003F  01A2               	clrf	Run_Bootloader@idle_count+1
  2470  0040                     l236:	
  2471                           ;pic16f1_uart.c: 23: while (1)
  2472                           
  2473  0040  0064               	clrwdt	;# 
  2474  0041                     l237:	
  2475                           ;pic16f1_uart.c: 27: while (!TXSTAbits.TRMT);
  2476                           
  2477  0041  0023               	movlb	3	; select bank3
  2478  0042  1C9E               	btfss	30,1	;volatile
  2479  0043  2841               	goto	l237
  2480                           
  2481                           ;pic16f1_uart.c: 28: Check_Device_Reset ();
  2482  0044  212B  3180         	fcall	_Check_Device_Reset
  2483                           
  2484                           ;pic16f1_uart.c: 31: if ( (PIR1bits.RCIF) )
  2485  0046  0020               	movlb	0	; select bank0
  2486  0047  1E91               	btfss	17,5	;volatile
  2487  0048  287D               	goto	l1348
  2488                           
  2489                           ;pic16f1_uart.c: 32: {
  2490                           ;pic16f1_uart.c: 33: ch = EUSART_Read();
  2491  0049  20FB  3180         	fcall	_EUSART_Read
  2492  004B  0020               	movlb	0	; select bank0
  2493  004C  00A0               	movwf	Run_Bootloader@ch
  2494                           
  2495                           ;pic16f1_uart.c: 34: frame.buffer[index++] = ch;
  2496  004D  0825               	movf	Run_Bootloader@index,w
  2497  004E  3EA0               	addlw	(low (_frame| 0))& (0+255)
  2498  004F  0086               	movwf	6
  2499  0050  0187               	clrf	7
  2500  0051  0820               	movf	Run_Bootloader@ch,w
  2501  0052  0081               	movwf	1
  2502  0053  3002               	movlw	2
  2503  0054  0AA5               	incf	Run_Bootloader@index,f
  2504                           
  2505                           ;pic16f1_uart.c: 35: if ( index == 2 )
  2506  0055  0625               	xorwf	Run_Bootloader@index,w
  2507  0056  1D03               	btfss	3,2
  2508  0057  2868               	goto	l241
  2509                           
  2510                           ;pic16f1_uart.c: 36: {
  2511                           ;pic16f1_uart.c: 37: if ( frame.command == 0x02 )
  2512  0058  3002               	movlw	2
  2513  0059  0021               	movlb	1	; select bank1
  2514  005A  0620               	xorwf	_frame^(0+128),w
  2515  005B  1D03               	btfss	3,2
  2516  005C  2861               	goto	l1332
  2517                           
  2518                           ;pic16f1_uart.c: 38: {
  2519                           ;pic16f1_uart.c: 39: msg_length += frame.data_length;
  2520  005D  0821               	movf	(_frame^(0+128)+1),w
  2521  005E  0020               	movlb	0	; select bank0
  2522  005F  07A4               	addwf	Run_Bootloader@msg_length,f
  2523                           
  2524                           ;pic16f1_uart.c: 40: }
  2525  0060  2868               	goto	l241
  2526  0061                     l1332:	
  2527                           
  2528                           ;pic16f1_uart.c: 41: else if ( frame.command == 0x68 )
  2529  0061  3068               	movlw	104
  2530  0062  0620               	xorwf	_frame^(0+128),w
  2531  0063  1D03               	btfss	3,2
  2532  0064  2868               	goto	l241
  2533                           
  2534                           ;pic16f1_uart.c: 42: {
  2535                           ;pic16f1_uart.c: 43: msg_length = 5;
  2536  0065  3005               	movlw	5
  2537  0066  0020               	movlb	0	; select bank0
  2538  0067  00A4               	movwf	Run_Bootloader@msg_length
  2539  0068                     l241:	
  2540                           
  2541                           ;pic16f1_uart.c: 44: }
  2542                           ;pic16f1_uart.c: 45: }
  2543                           ;pic16f1_uart.c: 46: if ( index >= msg_length )
  2544  0068  0020               	movlb	0	; select bank0
  2545  0069  0824               	movf	Run_Bootloader@msg_length,w
  2546  006A  0225               	subwf	Run_Bootloader@index,w
  2547  006B  1C03               	skipc
  2548  006C  2879               	goto	l1344
  2549                           
  2550                           ;pic16f1_uart.c: 47: {
  2551                           ;pic16f1_uart.c: 48: msg_length = ProcessBootBuffer();
  2552  006D  2147  3180         	fcall	_ProcessBootBuffer
  2553  006F  0020               	movlb	0	; select bank0
  2554  0070  00A4               	movwf	Run_Bootloader@msg_length
  2555                           
  2556                           ;pic16f1_uart.c: 49: BLE_SendData(frame.buffer, msg_length);
  2557  0071  00F3               	movwf	BLE_SendData@len
  2558  0072  30A0               	movlw	(low (_frame| 0))& (0+255)
  2559  0073  211A  3180         	fcall	_BLE_SendData
  2560                           
  2561                           ;pic16f1_uart.c: 50: index = 0;
  2562  0075  0020               	movlb	0	; select bank0
  2563  0076  3004               	movlw	4
  2564  0077  01A5               	clrf	Run_Bootloader@index
  2565                           
  2566                           ;pic16f1_uart.c: 51: msg_length = 4;
  2567  0078  00A4               	movwf	Run_Bootloader@msg_length
  2568  0079                     l1344:	
  2569                           
  2570                           ;pic16f1_uart.c: 52: }
  2571                           ;pic16f1_uart.c: 53: idle_count = 0;
  2572  0079  01A1               	clrf	Run_Bootloader@idle_count
  2573  007A  01A2               	clrf	Run_Bootloader@idle_count+1
  2574                           
  2575                           ;pic16f1_uart.c: 54: receiving = 1;
  2576  007B  01A3               	clrf	Run_Bootloader@receiving
  2577  007C  0AA3               	incf	Run_Bootloader@receiving,f
  2578  007D                     l1348:	
  2579                           
  2580                           ;pic16f1_uart.c: 55: }
  2581                           ;pic16f1_uart.c: 56: if ( receiving )
  2582  007D  0823               	movf	Run_Bootloader@receiving,w
  2583  007E  1903               	btfsc	3,2
  2584  007F  288D               	goto	L1
  2585                           
  2586                           ;pic16f1_uart.c: 57: {
  2587                           ;pic16f1_uart.c: 58: idle_count++;
  2588  0080  0AA1               	incf	Run_Bootloader@idle_count,f
  2589  0081  1903               	skipnz
  2590  0082  0AA2               	incf	Run_Bootloader@idle_count+1,f
  2591                           
  2592                           ;pic16f1_uart.c: 59: if ( idle_count > 1000 )
  2593  0083  3003               	movlw	3
  2594  0084  0222               	subwf	Run_Bootloader@idle_count+1,w
  2595  0085  30E9               	movlw	233
  2596  0086  1903               	skipnz
  2597  0087  0221               	subwf	Run_Bootloader@idle_count,w
  2598  0088  1C03               	skipc
  2599  0089  2840               	goto	l236
  2600                           
  2601                           ;pic16f1_uart.c: 60: {
  2602                           ;pic16f1_uart.c: 61: idle_count = 0;
  2603  008A  01A1               	clrf	Run_Bootloader@idle_count
  2604  008B  01A2               	clrf	Run_Bootloader@idle_count+1
  2605                           
  2606                           ;pic16f1_uart.c: 62: receiving = 0;
  2607  008C  01A3               	clrf	Run_Bootloader@receiving
  2608  008D                     L1:	
  2609  008D  3004               	movlw	4
  2610                           
  2611                           ;pic16f1_uart.c: 63: index = 0;
  2612  008E  01A5               	clrf	Run_Bootloader@index
  2613                           
  2614                           ;pic16f1_uart.c: 64: msg_length = 4;
  2615  008F  00A4               	movwf	Run_Bootloader@msg_length
  2616  0090  2840               	goto	l236
  2617  0091                     __end_of_Run_Bootloader:	
  2618                           ;pic16f1_uart.c: 67: else
  2619                           ;pic16f1_uart.c: 68: {
  2620                           ;pic16f1_uart.c: 69: index = 0;
  2621                           
  2622  0091                     __ptext16:	
  2623 ;; *************** function _BLE_Init *****************
  2624 ;; Defined at:
  2625 ;;		line 55 in file "src/ble.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;		None
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;		None
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  1    wreg      void 
  2632 ;; Registers used:
  2633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2634 ;; Tracked objects:
  2635 ;;		On entry : 1F/3
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2641 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2642 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2643 ;;Total ram usage:        1 bytes
  2644 ;; Hardware stack levels used:    1
  2645 ;; Hardware stack levels required when called:    3
  2646 ;; This function calls:
  2647 ;;		_BLE_SendCMD
  2648 ;; This function is called by:
  2649 ;;		_BOOTLOADER_Initialize
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           
  2654                           ;psect for function _BLE_Init
  2655  0091                     _BLE_Init:	
  2656                           
  2657                           ;ble.c: 57: LATBbits.LATB5 = 0;
  2658                           
  2659                           ;incstack = 0
  2660                           ; Regs used in _BLE_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2661  0091  0022               	movlb	2	; select bank2
  2662  0092  128D               	bcf	13,5	;volatile
  2663                           
  2664                           ;ble.c: 58: _delay((unsigned long)((20)*(1000000/4000.0)));
  2665  0093  3007               	movlw	7
  2666  0094  00F6               	movwf	??_BLE_Init
  2667  0095  307D               	movlw	125
  2668  0096                     u697:	
  2669  0096  0B89               	decfsz	9,f
  2670  0097  2896               	goto	u697
  2671  0098  0BF6               	decfsz	??_BLE_Init,f
  2672  0099  2896               	goto	u697
  2673  009A  0000               	nop
  2674                           
  2675                           ;ble.c: 59: LATBbits.LATB5 = 1;
  2676  009B  0022               	movlb	2	; select bank2
  2677  009C  168D               	bsf	13,5	;volatile
  2678                           
  2679                           ;ble.c: 60: _delay((unsigned long)((240)*(1000000/4000.0)));
  2680  009D  304E               	movlw	78
  2681  009E  00F6               	movwf	??_BLE_Init
  2682  009F  30EB               	movlw	235
  2683  00A0                     u707:	
  2684  00A0  0B89               	decfsz	9,f
  2685  00A1  28A0               	goto	u707
  2686  00A2  0BF6               	decfsz	??_BLE_Init,f
  2687  00A3  28A0               	goto	u707
  2688  00A4  0000               	nop
  2689                           
  2690                           ;ble.c: 63: BLE_SendCMD("AT+SET=1\r\n");
  2691  00A5  30DA               	movlw	low (STR_1| (0+32768))
  2692  00A6  00F3               	movwf	BLE_SendCMD@pBuf
  2693  00A7  3082               	movlw	high (STR_1| (0+32768))
  2694  00A8  00F4               	movwf	BLE_SendCMD@pBuf+1
  2695  00A9  20C2  3180         	fcall	_BLE_SendCMD
  2696                           
  2697                           ;ble.c: 64: _delay((unsigned long)((20)*(1000000/4000.0)));
  2698  00AB  3007               	movlw	7
  2699  00AC  00F6               	movwf	??_BLE_Init
  2700  00AD  307D               	movlw	125
  2701  00AE                     u717:	
  2702  00AE  0B89               	decfsz	9,f
  2703  00AF  28AE               	goto	u717
  2704  00B0  0BF6               	decfsz	??_BLE_Init,f
  2705  00B1  28AE               	goto	u717
  2706  00B2  0000               	nop
  2707                           
  2708                           ;ble.c: 66: BLE_SendCMD("AT+MODE=DATA\r\n");
  2709  00B3  30CB               	movlw	low (STR_2| (0+32768))
  2710  00B4  00F3               	movwf	BLE_SendCMD@pBuf
  2711  00B5  3082               	movlw	high (STR_2| (0+32768))
  2712  00B6  00F4               	movwf	BLE_SendCMD@pBuf+1
  2713  00B7  20C2  3180         	fcall	_BLE_SendCMD
  2714                           
  2715                           ;ble.c: 67: _delay((unsigned long)((20)*(1000000/4000.0)));
  2716  00B9  3007               	movlw	7
  2717  00BA  00F6               	movwf	??_BLE_Init
  2718  00BB  307D               	movlw	125
  2719  00BC                     u727:	
  2720  00BC  0B89               	decfsz	9,f
  2721  00BD  28BC               	goto	u727
  2722  00BE  0BF6               	decfsz	??_BLE_Init,f
  2723  00BF  28BC               	goto	u727
  2724  00C0  0000               	nop
  2725  00C1  0008               	return
  2726  00C2                     __end_of_BLE_Init:	
  2727  00C2                     __ptext17:	
  2728 ;; *************** function _BLE_SendCMD *****************
  2729 ;; Defined at:
  2730 ;;		line 16 in file "src/ble.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  pBuf            2    1[COMMON] PTR const unsigned char 
  2733 ;;		 -> STR_2(15), STR_1(11), 
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;  ack             7    0[BANK0 ] unsigned char [7]
  2736 ;;  index           1    8[BANK0 ] unsigned char 
  2737 ;;  rev             1    7[BANK0 ] unsigned char 
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  1    wreg      void 
  2740 ;; Registers used:
  2741 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/2
  2744 ;;		On exit  : 1F/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2747 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2748 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2749 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2750 ;;      Totals:         3       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2751 ;;Total ram usage:       12 bytes
  2752 ;; Hardware stack levels used:    1
  2753 ;; Hardware stack levels required when called:    2
  2754 ;; This function calls:
  2755 ;;		_EUSART_Read
  2756 ;;		_EUSART_Write
  2757 ;; This function is called by:
  2758 ;;		_BLE_Init
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           
  2763                           ;psect for function _BLE_SendCMD
  2764  00C2                     _BLE_SendCMD:	
  2765                           
  2766                           ;ble.c: 18: unsigned char ack[] = { 'A', 'T', '+', 'O', 'K', '\r', '\n' };
  2767                           
  2768                           ;incstack = 0
  2769                           ; Regs used in _BLE_SendCMD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2770  00C2  3029               	movlw	low BLE_SendCMD@F7866
  2771  00C3  0086               	movwf	6
  2772  00C4  3000               	movlw	high BLE_SendCMD@F7866
  2773  00C5  0087               	movwf	7
  2774  00C6  3020               	movlw	low BLE_SendCMD@ack
  2775  00C7  0084               	movwf	4
  2776  00C8  3000               	movlw	high BLE_SendCMD@ack
  2777  00C9  0085               	movwf	5
  2778  00CA  3007               	movlw	7
  2779  00CB  00F5               	movwf	??_BLE_SendCMD
  2780  00CC                     u510:	
  2781  00CC  0016               	moviw fsr1++
  2782  00CD  001A               	movwi fsr0++
  2783  00CE  0BF5               	decfsz	??_BLE_SendCMD,f
  2784  00CF  28CC               	goto	u510
  2785                           
  2786                           ;ble.c: 19: unsigned char index = 0;
  2787  00D0  0020               	movlb	0	; select bank0
  2788  00D1  01A8               	clrf	BLE_SendCMD@index
  2789  00D2  0023               	movlb	3	; select bank3
  2790  00D3  0819               	movf	25,w	;volatile
  2791  00D4                     l1232:	
  2792                           ;ble.c: 21: while ( *pBuf != '\0' )
  2793                           
  2794  00D4  0873               	movf	BLE_SendCMD@pBuf,w
  2795  00D5  0084               	movwf	4
  2796  00D6  0874               	movf	BLE_SendCMD@pBuf+1,w
  2797  00D7  0085               	movwf	5
  2798  00D8  0012               	moviw fsr0++
  2799  00D9  1903               	btfsc	3,2
  2800  00DA  28F5               	goto	l1242
  2801                           
  2802                           ;ble.c: 22: {
  2803                           ;ble.c: 23: EUSART_Write(*pBuf++);
  2804  00DB  0873               	movf	BLE_SendCMD@pBuf,w
  2805  00DC  0084               	movwf	4
  2806  00DD  0874               	movf	BLE_SendCMD@pBuf+1,w
  2807  00DE  0085               	movwf	5
  2808  00DF  0800               	movf	0,w	;code access
  2809  00E0  2105  3180         	fcall	_EUSART_Write
  2810  00E2  0AF3               	incf	BLE_SendCMD@pBuf,f
  2811  00E3  1903               	skipnz
  2812  00E4  0AF4               	incf	BLE_SendCMD@pBuf+1,f
  2813  00E5  28D4               	goto	l1232
  2814  00E6                     l1234:	
  2815                           
  2816                           ;ble.c: 28: {
  2817                           ;ble.c: 29: rev = EUSART_Read();
  2818  00E6  20FB  3180         	fcall	_EUSART_Read
  2819  00E8  0020               	movlb	0	; select bank0
  2820  00E9  00A7               	movwf	BLE_SendCMD@rev
  2821                           
  2822                           ;ble.c: 30: if ( rev == ack[index] )
  2823  00EA  0828               	movf	BLE_SendCMD@index,w
  2824  00EB  3E20               	addlw	(low (BLE_SendCMD@ack| 0))& (0+255)
  2825  00EC  0086               	movwf	6
  2826  00ED  0187               	clrf	7
  2827  00EE  0801               	movf	1,w
  2828  00EF  0627               	xorwf	BLE_SendCMD@rev,w
  2829  00F0  1D03               	skipz
  2830  00F1  28F4               	goto	l1240
  2831                           
  2832                           ;ble.c: 31: {
  2833                           ;ble.c: 32: index++;
  2834  00F2  0AA8               	incf	BLE_SendCMD@index,f
  2835                           
  2836                           ;ble.c: 33: }
  2837  00F3  28F5               	goto	l1242
  2838  00F4                     l1240:	
  2839                           
  2840                           ;ble.c: 34: else
  2841                           ;ble.c: 35: {
  2842                           ;ble.c: 36: index = 0;
  2843  00F4  01A8               	clrf	BLE_SendCMD@index
  2844  00F5                     l1242:	
  2845  00F5  3007               	movlw	7
  2846  00F6  0020               	movlb	0	; select bank0
  2847  00F7  0228               	subwf	BLE_SendCMD@index,w
  2848  00F8  1803               	btfsc	3,0
  2849  00F9  0008               	return
  2850  00FA  28E6               	goto	l1234
  2851  00FB                     __end_of_BLE_SendCMD:	
  2852  00FB                     __ptext19:	
  2853 ;; *************** function _EUSART_Read *****************
  2854 ;; Defined at:
  2855 ;;		line 38 in file "src/eusart.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;		None
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;		None
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      unsigned char 
  2862 ;; Registers used:
  2863 ;;		wreg
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 1F/3
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2873 ;;Total ram usage:        0 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    1
  2876 ;; This function calls:
  2877 ;;		Nothing
  2878 ;; This function is called by:
  2879 ;;		_BLE_SendCMD
  2880 ;;		_Run_Bootloader
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           
  2885                           ;psect for function _EUSART_Read
  2886  00FB                     _EUSART_Read:	
  2887  00FB                     l61:	
  2888                           ;eusart.c: 41: while(!PIR1bits.RCIF);
  2889                           
  2890                           ;incstack = 0
  2891                           ; Regs used in _EUSART_Read: [wreg]
  2892                           
  2893  00FB  0020               	movlb	0	; select bank0
  2894  00FC  1E91               	btfss	17,5	;volatile
  2895  00FD  28FB               	goto	l61
  2896                           
  2897                           ;eusart.c: 43: if(RC1STAbits.OERR)
  2898  00FE  0023               	movlb	3	; select bank3
  2899  00FF  1C9D               	btfss	29,1	;volatile
  2900  0100  2903               	goto	l1108
  2901                           
  2902                           ;eusart.c: 44: {
  2903                           ;eusart.c: 46: RC1STAbits.CREN = 0;
  2904  0101  121D               	bcf	29,4	;volatile
  2905                           
  2906                           ;eusart.c: 47: RC1STAbits.CREN = 1;
  2907  0102  161D               	bsf	29,4	;volatile
  2908  0103                     l1108:	
  2909                           
  2910                           ;eusart.c: 48: }
  2911                           ;eusart.c: 50: return RC1REG;
  2912  0103  0819               	movf	25,w	;volatile
  2913  0104  0008               	return
  2914  0105                     __end_of_EUSART_Read:	
  2915  0105                     __ptext18:	
  2916 ;; *************** function _EUSART_Write *****************
  2917 ;; Defined at:
  2918 ;;		line 53 in file "src/eusart.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  byte            1    wreg     unsigned char 
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;  byte            1    0[COMMON] unsigned char 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  1    wreg      void 
  2925 ;; Registers used:
  2926 ;;		wreg
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 1F/3
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2935 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2936 ;;Total ram usage:        1 bytes
  2937 ;; Hardware stack levels used:    1
  2938 ;; Hardware stack levels required when called:    1
  2939 ;; This function calls:
  2940 ;;		Nothing
  2941 ;; This function is called by:
  2942 ;;		_BLE_SendCMD
  2943 ;;		_BLE_SendData
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           
  2948                           ;psect for function _EUSART_Write
  2949  0105                     _EUSART_Write:	
  2950                           
  2951                           ;incstack = 0
  2952                           ; Regs used in _EUSART_Write: [wreg]
  2953                           ;EUSART_Write@byte stored from wreg
  2954  0105  00F2               	movwf	EUSART_Write@byte
  2955  0106                     l68:	
  2956                           ;eusart.c: 55: while(!PIR1bits.TXIF);
  2957                           
  2958  0106  0020               	movlb	0	; select bank0
  2959  0107  1E11               	btfss	17,4	;volatile
  2960  0108  2906               	goto	l68
  2961                           
  2962                           ;eusart.c: 56: TX1REG = byte;
  2963  0109  0872               	movf	EUSART_Write@byte,w
  2964  010A  0023               	movlb	3	; select bank3
  2965  010B  009A               	movwf	26	;volatile
  2966  010C  0008               	return
  2967  010D                     __end_of_EUSART_Write:	
  2968  010D                     __ptext15:	
  2969 ;; *************** function _Bootload_Required *****************
  2970 ;; Defined at:
  2971 ;;		line 180 in file "src/pic16f1_bootload.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;		None
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;		None
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  1    wreg      unsigned char 
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0
  2980 ;; Tracked objects:
  2981 ;;		On entry : B1F/0
  2982 ;;		On exit  : 1F/11
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2989 ;;Total ram usage:        0 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; Hardware stack levels required when called:    1
  2992 ;; This function calls:
  2993 ;;		Nothing
  2994 ;; This function is called by:
  2995 ;;		_BOOTLOADER_Initialize
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           
  3000                           ;psect for function _Bootload_Required
  3001  010D                     _Bootload_Required:	
  3002                           
  3003                           ;pic16f1_bootload.c: 182: NVMADR = 8192u - 1;
  3004                           
  3005                           ;incstack = 0
  3006                           ; Regs used in _Bootload_Required: [wreg+status,2+status,0]
  3007  010D  22BB  3180         	fcall	PL8	;call to abstracted procedure
  3008                           
  3009                           ;pic16f1_bootload.c: 183: NVMCON1 = 0x80;
  3010  010F  3080               	movlw	128
  3011  0110  0095               	movwf	21	;volsfr
  3012                           
  3013                           ;pic16f1_bootload.c: 184: NVMCON1bits.RD = 1;
  3014  0111  1415               	bsf	21,0	;volsfr
  3015                           
  3016                           ;pic16f1_bootload.c: 185: __nop();
  3017  0112  0000               	nop
  3018                           
  3019                           ;pic16f1_bootload.c: 186: __nop();
  3020  0113  0000               	nop
  3021                           
  3022                           ;pic16f1_bootload.c: 187: if (NVMDATL != 0x55)
  3023  0114  3055               	movlw	85
  3024  0115  0031               	movlb	17	; select bank17
  3025  0116  0613               	xorwf	19,w	;volatile
  3026  0117  1D03               	btfss	3,2
  3027                           
  3028                           ;pic16f1_bootload.c: 188: {
  3029                           ;pic16f1_bootload.c: 189: return (1);
  3030  0118  3401               	retlw	1
  3031                           
  3032                           ;pic16f1_bootload.c: 190: }
  3033                           ;pic16f1_bootload.c: 192: return (0);
  3034  0119  3400               	retlw	0
  3035  011A                     __end_of_Bootload_Required:	
  3036  011A                     __ptext14:	
  3037 ;; *************** function _BLE_SendData *****************
  3038 ;; Defined at:
  3039 ;;		line 41 in file "src/ble.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;  pbuf            1    wreg     PTR unsigned char 
  3042 ;;		 -> frame(68), 
  3043 ;;  len             1    1[COMMON] unsigned char 
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;  pbuf            1    2[COMMON] PTR unsigned char 
  3046 ;;		 -> frame(68), 
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  1    wreg      void 
  3049 ;; Registers used:
  3050 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3051 ;; Tracked objects:
  3052 ;;		On entry : 1F/0
  3053 ;;		On exit  : 1F/3
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3056 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3057 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3059 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3060 ;;Total ram usage:        2 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; Hardware stack levels required when called:    2
  3063 ;; This function calls:
  3064 ;;		_EUSART_Write
  3065 ;; This function is called by:
  3066 ;;		_Run_Bootloader
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           
  3071                           ;psect for function _BLE_SendData
  3072  011A                     _BLE_SendData:	
  3073                           
  3074                           ;incstack = 0
  3075                           ; Regs used in _BLE_SendData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3076                           ;BLE_SendData@pbuf stored from wreg
  3077  011A  00F4               	movwf	BLE_SendData@pbuf
  3078  011B                     l1250:	
  3079                           ;ble.c: 45: while ( len-- )
  3080                           
  3081  011B  03F3               	decf	BLE_SendData@len,f
  3082  011C  0A73               	incf	BLE_SendData@len,w
  3083  011D  1903               	btfsc	3,2
  3084  011E  2927               	goto	l31
  3085                           
  3086                           ;ble.c: 46: {
  3087                           ;ble.c: 47: EUSART_Write(*pbuf++);
  3088  011F  0874               	movf	BLE_SendData@pbuf,w
  3089  0120  0086               	movwf	6
  3090  0121  0187               	clrf	7
  3091  0122  0801               	movf	1,w
  3092  0123  2105  3180         	fcall	_EUSART_Write
  3093  0125  0AF4               	incf	BLE_SendData@pbuf,f
  3094  0126  291B               	goto	l1250
  3095  0127                     l31:	
  3096  0127  0023               	movlb	3	; select bank3
  3097  0128  189E               	btfsc	30,1	;volatile
  3098  0129  0008               	return
  3099  012A  2927               	goto	l31
  3100  012B                     __end_of_BLE_SendData:	
  3101  012B                     __ptext13:	
  3102 ;; *************** function _Check_Device_Reset *****************
  3103 ;; Defined at:
  3104 ;;		line 472 in file "src/pic16f1_bootload.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;		None
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;		None
  3109 ;; Return value:  Size  Location     Type
  3110 ;;                  1    wreg      void 
  3111 ;; Registers used:
  3112 ;;		wreg, status,2, status,0
  3113 ;; Tracked objects:
  3114 ;;		On entry : 1F/3
  3115 ;;		On exit  : 0/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3120 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3121 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3122 ;;Total ram usage:        1 bytes
  3123 ;; Hardware stack levels used:    1
  3124 ;; Hardware stack levels required when called:    1
  3125 ;; This function calls:
  3126 ;;		Nothing
  3127 ;; This function is called by:
  3128 ;;		_Run_Bootloader
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           
  3133                           ;psect for function _Check_Device_Reset
  3134  012B                     _Check_Device_Reset:	
  3135                           
  3136                           ;pic16f1_bootload.c: 474: if (reset_pending == 1)
  3137                           
  3138                           ;incstack = 0
  3139                           ; Regs used in _Check_Device_Reset: [wreg+status,2+status,0]
  3140  012B  0379               	decf	_reset_pending,w	;volatile
  3141  012C  1D03               	btfss	3,2
  3142  012D  0008               	return
  3143                           
  3144                           ;pic16f1_bootload.c: 475: {
  3145                           ;pic16f1_bootload.c: 479: NVMADR = 8192u - 1;
  3146  012E  22BB  3180         	fcall	PL8	;call to abstracted procedure
  3147                           
  3148                           ;pic16f1_bootload.c: 480: NVMCON1 = 0x84;
  3149  0130  3084               	movlw	132
  3150  0131  0095               	movwf	21	;volsfr
  3151                           
  3152                           ;pic16f1_bootload.c: 481: NVMDATL = 0x55;
  3153  0132  3055               	movlw	85
  3154  0133  0093               	movwf	19	;volatile
  3155                           
  3156                           ;pic16f1_bootload.c: 482: NVMCON2 = 0x55;
  3157  0134  0096               	movwf	22	;volsfr
  3158                           
  3159                           ;pic16f1_bootload.c: 483: NVMCON2 = 0xAA;
  3160  0135  30AA               	movlw	170
  3161  0136  0096               	movwf	22	;volsfr
  3162                           
  3163                           ;pic16f1_bootload.c: 484: NVMCON1bits.WR = 1;
  3164  0137  1495               	bsf	21,1	;volsfr
  3165                           
  3166                           ;pic16f1_bootload.c: 485: __nop();
  3167  0138  0000               	nop
  3168                           
  3169                           ;pic16f1_bootload.c: 486: __nop();
  3170  0139  0000               	nop
  3171  013A                     l216:	
  3172                           ;pic16f1_bootload.c: 487: while(NVMCON1bits.WR);
  3173                           
  3174  013A  0031               	movlb	17	; select bank17
  3175  013B  1895               	btfsc	21,1	;volsfr
  3176  013C  293A               	goto	l216
  3177                           
  3178                           ;pic16f1_bootload.c: 488: NVMCON1bits.WREN = 0;
  3179  013D  1115               	bcf	21,2	;volsfr
  3180                           
  3181                           ;pic16f1_bootload.c: 493: _delay((unsigned long)((96)*(1000000/4000.0)));
  3182  013E  3020               	movlw	32
  3183  013F  00F2               	movwf	??_Check_Device_Reset
  3184  0140  302A               	movlw	42
  3185  0141                     u687:	
  3186  0141  0B89               	decfsz	9,f
  3187  0142  2941               	goto	u687
  3188  0143  0BF2               	decfsz	??_Check_Device_Reset,f
  3189  0144  2941               	goto	u687
  3190  0145  0001               	reset	;# 
  3191  0146  0008               	return
  3192  0147                     __end_of_Check_Device_Reset:	
  3193  0147                     __ptext7:	
  3194 ;; *************** function _ProcessBootBuffer *****************
  3195 ;; Defined at:
  3196 ;;		line 195 in file "src/pic16f1_bootload.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;		None
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;  len             1    6[COMMON] unsigned char 
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  1    wreg      unsigned char 
  3203 ;; Registers used:
  3204 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3205 ;; Tracked objects:
  3206 ;;		On entry : 1F/0
  3207 ;;		On exit  : 1F/1
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3213 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3214 ;;Total ram usage:        1 bytes
  3215 ;; Hardware stack levels used:    1
  3216 ;; Hardware stack levels required when called:    3
  3217 ;; This function calls:
  3218 ;;		_Calc_Checksum
  3219 ;;		_Erase_Flash
  3220 ;;		_Get_Version_Data
  3221 ;;		_Write_Flash
  3222 ;; This function is called by:
  3223 ;;		_Run_Bootloader
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           
  3228                           ;psect for function _ProcessBootBuffer
  3229  0147                     _ProcessBootBuffer:	
  3230                           
  3231                           ;pic16f1_bootload.c: 197: uint8_t len;
  3232                           ;pic16f1_bootload.c: 200: switch (frame.command)
  3233                           
  3234                           ;incstack = 0
  3235                           ; Regs used in _ProcessBootBuffer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3236  0147  2964               	goto	l1276
  3237  0148                     l1254:	
  3238                           
  3239                           ;pic16f1_bootload.c: 203: len = Get_Version_Data();
  3240  0148  224C  3180         	fcall	_Get_Version_Data
  3241  014A  295F               	goto	L6
  3242  014B                     l1256:	
  3243                           ;pic16f1_bootload.c: 204: break;
  3244                           
  3245                           
  3246                           ;pic16f1_bootload.c: 209: len = Write_Flash();
  3247  014B  21F2  3180         	fcall	_Write_Flash
  3248  014D  295F               	goto	L6
  3249  014E                     l1258:	
  3250                           ;pic16f1_bootload.c: 210: break;
  3251                           
  3252                           
  3253                           ;pic16f1_bootload.c: 212: len = Erase_Flash();
  3254  014E  21B8  3180         	fcall	_Erase_Flash
  3255  0150  295F               	goto	L6
  3256  0151                     l1260:	
  3257                           ;pic16f1_bootload.c: 213: break;
  3258                           
  3259                           
  3260                           ;pic16f1_bootload.c: 221: len = Calc_Checksum();
  3261  0151  217B  3180         	fcall	_Calc_Checksum
  3262  0153  295F               	goto	L6
  3263  0154                     l1262:	
  3264                           ;pic16f1_bootload.c: 222: break;
  3265                           
  3266                           
  3267                           ;pic16f1_bootload.c: 224: reset_pending = 1;
  3268  0154  3001               	movlw	1
  3269  0155  00F9               	movwf	_reset_pending	;volatile
  3270                           
  3271                           ;pic16f1_bootload.c: 225: frame.data[0] = 0x01;
  3272  0156  01A4               	clrf	(_frame^(0+128)+4)
  3273  0157  0AA4               	incf	(_frame^(0+128)+4),f
  3274  0158                     l1266:	
  3275  0158  3005               	movlw	5
  3276  0159  295D               	goto	L7
  3277  015A                     l169:	
  3278                           ;pic16f1_bootload.c: 229: case 0x68:
  3279                           
  3280                           ;pic16f1_bootload.c: 228: break;
  3281                           
  3282                           ;pic16f1_bootload.c: 227: len = 5;
  3283                           
  3284                           ;pic16f1_bootload.c: 226: frame.data_length = 0x01;
  3285                           
  3286  015A  3005               	movlw	5
  3287                           
  3288                           ;pic16f1_bootload.c: 230: frame.data[0] = 0x01;
  3289  015B  01A4               	clrf	(_frame^(0+128)+4)
  3290  015C  0AA4               	incf	(_frame^(0+128)+4),f
  3291  015D                     L7:	
  3292                           
  3293                           ;pic16f1_bootload.c: 231: frame.data_length = 0x01;
  3294  015D  01A1               	clrf	(_frame^(0+128)+1)
  3295  015E  0AA1               	incf	(_frame^(0+128)+1),f
  3296  015F                     L6:	
  3297                           ;pic16f1_bootload.c: 232: len = 5;
  3298                           
  3299  015F  00F8               	movwf	ProcessBootBuffer@len
  3300                           
  3301                           ;pic16f1_bootload.c: 233: break;
  3302  0160  2979               	goto	l1278
  3303  0161                     l1270:	
  3304                           
  3305                           ;pic16f1_bootload.c: 235: frame.data[0] = 0xFF;
  3306  0161  30FF               	movlw	255
  3307  0162  00A4               	movwf	(_frame^(0+128)+4)
  3308  0163  2958               	goto	l1266
  3309  0164                     l1276:	
  3310  0164  0021               	movlb	1	; select bank1
  3311  0165  0820               	movf	_frame^(0+128),w
  3312                           
  3313                           ; Switch size 1, requested type "space"
  3314                           ; Number of cases is 6, Range of values is 0 to 104
  3315                           ; switch strategies available:
  3316                           ; Name         Instructions Cycles
  3317                           ; simple_byte           19    10 (average)
  3318                           ; direct_byte          216     6 (fixed)
  3319                           ; jumptable            260     6 (fixed)
  3320                           ;	Chosen strategy is simple_byte
  3321  0166  3A00               	xorlw	0	; case 0
  3322  0167  1903               	skipnz
  3323  0168  2948               	goto	l1254
  3324  0169  3A02               	xorlw	2	; case 2
  3325  016A  1903               	skipnz
  3326  016B  294B               	goto	l1256
  3327  016C  3A01               	xorlw	1	; case 3
  3328  016D  1903               	skipnz
  3329  016E  294E               	goto	l1258
  3330  016F  3A0A               	xorlw	10	; case 9
  3331  0170  1903               	skipnz
  3332  0171  2951               	goto	l1260
  3333  0172  3A03               	xorlw	3	; case 10
  3334  0173  1903               	skipnz
  3335  0174  2954               	goto	l1262
  3336  0175  3A62               	xorlw	98	; case 104
  3337  0176  1903               	skipnz
  3338  0177  295A               	goto	l169
  3339  0178  2961               	goto	l1270
  3340  0179                     l1278:	
  3341                           
  3342                           ;pic16f1_bootload.c: 240: return len;
  3343  0179  0878               	movf	ProcessBootBuffer@len,w
  3344  017A  0008               	return
  3345  017B                     __end_of_ProcessBootBuffer:	
  3346  017B                     __ptext12:	
  3347 ;; *************** function _Calc_Checksum *****************
  3348 ;; Defined at:
  3349 ;;		line 423 in file "src/pic16f1_bootload.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;		None
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;  i               2    0[COMMON] unsigned int 
  3354 ;;  check_sum       2    4[COMMON] unsigned int 
  3355 ;;  endAddr         2    2[COMMON] unsigned int 
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  1    wreg      unsigned char 
  3358 ;; Registers used:
  3359 ;;		wreg, status,2, status,0
  3360 ;; Tracked objects:
  3361 ;;		On entry : 1E/1
  3362 ;;		On exit  : 1F/1
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3366 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3368 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3369 ;;Total ram usage:        6 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; Hardware stack levels required when called:    1
  3372 ;; This function calls:
  3373 ;;		Nothing
  3374 ;; This function is called by:
  3375 ;;		_ProcessBootBuffer
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           
  3380                           ;psect for function _Calc_Checksum
  3381  017B                     _Calc_Checksum:	
  3382                           
  3383                           ;pic16f1_bootload.c: 425: uint16_t endAddr = (frame.data[1]<<8)|frame.data[0];
  3384                           
  3385                           ;incstack = 0
  3386                           ; Regs used in _Calc_Checksum: [wreg+status,2+status,0]
  3387  017B  0021               	movlb	1	; select bank1
  3388  017C  0825               	movf	(_frame^(0+128)+5),w
  3389  017D  00F5               	movwf	Calc_Checksum@endAddr+1
  3390  017E  0824               	movf	(_frame^(0+128)+4),w
  3391  017F  00F4               	movwf	Calc_Checksum@endAddr
  3392                           
  3393                           ;pic16f1_bootload.c: 426: if (frame.address < 0x400 || endAddr >= 8192u)
  3394  0180  3004               	movlw	4
  3395  0181  0223               	subwf	((_frame+1)^(0+128)+2),w
  3396  0182  3000               	movlw	0
  3397  0183  1903               	skipnz
  3398  0184  0222               	subwf	(_frame^(0+128)+2),w
  3399  0185  1C03               	skipc
  3400  0186  298E               	goto	l205
  3401  0187  3020               	movlw	32
  3402  0188  0275               	subwf	Calc_Checksum@endAddr+1,w
  3403  0189  3000               	movlw	0
  3404  018A  1903               	skipnz
  3405  018B  0274               	subwf	Calc_Checksum@endAddr,w
  3406  018C  1C03               	skipc
  3407  018D  298F               	goto	l1206
  3408  018E                     l205:	
  3409                           
  3410                           ;pic16f1_bootload.c: 427: {
  3411                           ;pic16f1_bootload.c: 428: frame.data_length = 0x01;
  3412                           
  3413                           ;pic16f1_bootload.c: 429: frame.data[0] = 0xFE;
  3414                           
  3415                           ;pic16f1_bootload.c: 430: return 5;
  3416  018E  2AB6               	ljmp	PL6	;call to abstracted procedure
  3417  018F                     l1206:	
  3418                           
  3419                           ;pic16f1_bootload.c: 431: }
  3420                           ;pic16f1_bootload.c: 432: NVMADR = frame.address;
  3421  018F  22A4  3180         	fcall	PL2	;call to abstracted procedure
  3422                           
  3423                           ;pic16f1_bootload.c: 433: NVMCON1 = 0x80;
  3424  0191  3080               	movlw	128
  3425  0192  0095               	movwf	21	;volsfr
  3426                           
  3427                           ;pic16f1_bootload.c: 434: uint16_t check_sum = 0;
  3428  0193  01F6               	clrf	Calc_Checksum@check_sum
  3429  0194  01F7               	clrf	Calc_Checksum@check_sum+1
  3430                           
  3431                           ;pic16f1_bootload.c: 435: for (uint16_t i = frame.address; i < endAddr; i++)
  3432  0195  0021               	movlb	1	; select bank1
  3433  0196  0823               	movf	((_frame+1)^(0+128)+2),w
  3434  0197  00F3               	movwf	Calc_Checksum@i+1
  3435  0198  0822               	movf	(_frame^(0+128)+2),w
  3436  0199  00F2               	movwf	Calc_Checksum@i
  3437  019A                     l207:	
  3438  019A  0875               	movf	Calc_Checksum@endAddr+1,w
  3439  019B  0273               	subwf	Calc_Checksum@i+1,w
  3440  019C  1D03               	skipz
  3441  019D  29A0               	goto	u505
  3442  019E  0874               	movf	Calc_Checksum@endAddr,w
  3443  019F  0272               	subwf	Calc_Checksum@i,w
  3444  01A0                     u505:	
  3445  01A0  1803               	btfsc	3,0
  3446  01A1  29B2               	goto	l1218
  3447                           
  3448                           ;pic16f1_bootload.c: 436: {
  3449                           ;pic16f1_bootload.c: 437: NVMCON1bits.RD = 1;
  3450  01A2  0031               	movlb	17	; select bank17
  3451  01A3  1415               	bsf	21,0	;volsfr
  3452                           
  3453                           ;pic16f1_bootload.c: 438: __nop();
  3454  01A4  0000               	nop
  3455                           
  3456                           ;pic16f1_bootload.c: 439: __nop();
  3457  01A5  0000               	nop
  3458                           
  3459                           ;pic16f1_bootload.c: 440: check_sum += NVMDAT;
  3460  01A6  0031               	movlb	17	; select bank17
  3461  01A7  0813               	movf	19,w	;volatile
  3462  01A8  07F6               	addwf	Calc_Checksum@check_sum,f
  3463  01A9  0814               	movf	20,w	;volatile
  3464  01AA  3DF7               	addwfc	Calc_Checksum@check_sum+1,f
  3465                           
  3466                           ;pic16f1_bootload.c: 441: ++ NVMADR;
  3467  01AB  0A91               	incf	17,f	;volatile
  3468  01AC  1903               	skipnz
  3469  01AD  0A92               	incf	18,f	;volatile
  3470  01AE  0AF2               	incf	Calc_Checksum@i,f
  3471  01AF  1903               	skipnz
  3472  01B0  0AF3               	incf	Calc_Checksum@i+1,f
  3473  01B1  299A               	goto	l207
  3474  01B2                     l1218:	
  3475                           
  3476                           ;pic16f1_bootload.c: 442: }
  3477                           ;pic16f1_bootload.c: 443: frame.data[2] = check_sum & 0xFF;
  3478  01B2  0876               	movf	Calc_Checksum@check_sum,w
  3479  01B3  0021               	movlb	1	; select bank1
  3480  01B4  00A6               	movwf	(_frame^(0+128)+6)
  3481                           
  3482                           ;pic16f1_bootload.c: 444: frame.data[3] = check_sum >> 8;
  3483  01B5  0877               	movf	Calc_Checksum@check_sum+1,w
  3484  01B6  00A7               	movwf	(_frame^(0+128)+7)
  3485                           
  3486                           ;pic16f1_bootload.c: 445: return 8;
  3487  01B7  3408               	retlw	8
  3488  01B8                     __end_of_Calc_Checksum:	
  3489  01B8                     __ptext10:	
  3490 ;; *************** function _Erase_Flash *****************
  3491 ;; Defined at:
  3492 ;;		line 327 in file "src/pic16f1_bootload.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;		None
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;  i               2    2[COMMON] unsigned int 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  1    wreg      unsigned char 
  3499 ;; Registers used:
  3500 ;;		wreg, status,2, status,0, pclath, cstack
  3501 ;; Tracked objects:
  3502 ;;		On entry : 1E/1
  3503 ;;		On exit  : 1F/1
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3507 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3508 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3509 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3510 ;;Total ram usage:        4 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; Hardware stack levels required when called:    2
  3513 ;; This function calls:
  3514 ;;		_StartWrite
  3515 ;; This function is called by:
  3516 ;;		_ProcessBootBuffer
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           
  3521                           ;psect for function _Erase_Flash
  3522  01B8                     _Erase_Flash:	
  3523                           
  3524                           ;pic16f1_bootload.c: 329: if (frame.address < 0x400 )
  3525                           
  3526                           ;incstack = 0
  3527                           ; Regs used in _Erase_Flash: [wreg+status,2+status,0+pclath+cstack]
  3528  01B8  22C7  3180         	fcall	PL12	;call to abstracted procedure
  3529  01BA  1903               	skipnz
  3530  01BB  0222               	subwf	(_frame^(0+128)+2),w
  3531  01BC  1803               	skipnc
  3532  01BD  29C0               	goto	l1166
  3533  01BE                     l1160:	
  3534                           
  3535                           ;pic16f1_bootload.c: 330: {
  3536                           ;pic16f1_bootload.c: 331: frame.data_length = 0x01;
  3537  01BE  0021               	movlb	1	; select bank1
  3538                           
  3539                           ;pic16f1_bootload.c: 332: frame.data[0] = 0xFE;
  3540                           
  3541                           ;pic16f1_bootload.c: 333: return 5;
  3542  01BF  2AB6               	ljmp	PL6	;call to abstracted procedure
  3543  01C0                     l1166:	
  3544                           
  3545                           ;pic16f1_bootload.c: 334: }
  3546                           ;pic16f1_bootload.c: 335: EE_Key_1 = 0x55;
  3547                           
  3548                           ;pic16f1_bootload.c: 336: EE_Key_2 = 0xAA;
  3549  01C0  22C1  3180         	fcall	PL10	;call to abstracted procedure
  3550                           
  3551                           ;pic16f1_bootload.c: 337: NVMADR = frame.address;
  3552  01C2  0021               	movlb	1	; select bank1
  3553  01C3  22A4  3180         	fcall	PL2	;call to abstracted procedure
  3554                           
  3555                           ;pic16f1_bootload.c: 338: for (uint16_t i=0; i < frame.data_length; i++)
  3556  01C5  01F4               	clrf	Erase_Flash@i
  3557  01C6  01F5               	clrf	Erase_Flash@i+1
  3558  01C7                     l1186:	
  3559  01C7  0021               	movlb	1	; select bank1
  3560  01C8  0821               	movf	(_frame^(0+128)+1),w
  3561  01C9  00F2               	movwf	??_Erase_Flash
  3562  01CA  01F3               	clrf	??_Erase_Flash+1
  3563  01CB  0873               	movf	??_Erase_Flash+1,w
  3564  01CC  0275               	subwf	Erase_Flash@i+1,w
  3565  01CD  1D03               	skipz
  3566  01CE  29D1               	goto	u465
  3567  01CF  0872               	movf	??_Erase_Flash,w
  3568  01D0  0274               	subwf	Erase_Flash@i,w
  3569  01D1                     u465:	
  3570  01D1  1803               	btfsc	3,0
  3571  01D2  29ED               	goto	l198
  3572                           
  3573                           ;pic16f1_bootload.c: 339: {
  3574                           ;pic16f1_bootload.c: 340: if ((NVMADR & 0x7FFF) >= 8192u)
  3575  01D3  0031               	movlb	17	; select bank17
  3576  01D4  0811               	movf	17,w	;volatile
  3577  01D5  00F2               	movwf	??_Erase_Flash
  3578  01D6  307F               	movlw	127
  3579  01D7  0512               	andwf	18,w	;volatile
  3580  01D8  00F3               	movwf	??_Erase_Flash+1
  3581  01D9  3020               	movlw	32
  3582  01DA  0273               	subwf	??_Erase_Flash+1,w
  3583  01DB  3000               	movlw	0
  3584  01DC  1903               	skipnz
  3585  01DD  0272               	subwf	??_Erase_Flash,w
  3586  01DE  1803               	btfsc	3,0
  3587  01DF  29BE               	goto	l1160
  3588                           
  3589                           ;pic16f1_bootload.c: 345: }
  3590                           ;pic16f1_bootload.c: 346: NVMCON1 = 0x94;
  3591  01E0  3094               	movlw	148
  3592  01E1  0095               	movwf	21	;volsfr
  3593                           
  3594                           ;pic16f1_bootload.c: 347: StartWrite();
  3595  01E2  2243  3180         	fcall	_StartWrite
  3596                           
  3597                           ;pic16f1_bootload.c: 348: NVMADR += 32u;
  3598  01E4  3020               	movlw	32
  3599  01E5  0031               	movlb	17	; select bank17
  3600  01E6  0791               	addwf	17,f	;volatile
  3601  01E7  1803               	skipnc
  3602  01E8  0A92               	incf	18,f	;volatile
  3603  01E9  0AF4               	incf	Erase_Flash@i,f
  3604  01EA  1903               	skipnz
  3605  01EB  0AF5               	incf	Erase_Flash@i+1,f
  3606  01EC  29C7               	goto	l1186
  3607  01ED                     l198:	
  3608  01ED  0031               	movlb	17	; select bank17
  3609  01EE  1895               	btfsc	21,1	;volsfr
  3610  01EF  29ED               	goto	l198
  3611                           
  3612                           ;pic16f1_bootload.c: 351: NVMCON1bits.WREN = 0;
  3613  01F0  1115               	bcf	21,2	;volsfr
  3614                           
  3615                           ;pic16f1_bootload.c: 352: EE_Key_1 = 0x00;
  3616                           
  3617                           ;pic16f1_bootload.c: 353: EE_Key_2 = 0x00;
  3618                           
  3619                           ;pic16f1_bootload.c: 354: frame.data_length = 0x01;
  3620                           
  3621                           ;pic16f1_bootload.c: 355: frame.data[0] = 0x01;
  3622                           
  3623                           ;pic16f1_bootload.c: 356: return 5;
  3624  01F1  2AAC               	ljmp	PL4	;call to abstracted procedure
  3625  01F2                     __end_of_Erase_Flash:	
  3626  01F2                     __ptext8:	
  3627 ;; *************** function _Write_Flash *****************
  3628 ;; Defined at:
  3629 ;;		line 287 in file "src/pic16f1_bootload.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;		None
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;  i               1    2[COMMON] unsigned char 
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  1    wreg      unsigned char 
  3636 ;; Registers used:
  3637 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3638 ;; Tracked objects:
  3639 ;;		On entry : 1E/1
  3640 ;;		On exit  : 1F/1
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3644 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3645 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3646 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3647 ;;Total ram usage:        3 bytes
  3648 ;; Hardware stack levels used:    1
  3649 ;; Hardware stack levels required when called:    2
  3650 ;; This function calls:
  3651 ;;		_StartWrite
  3652 ;; This function is called by:
  3653 ;;		_ProcessBootBuffer
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           
  3658                           ;psect for function _Write_Flash
  3659  01F2                     _Write_Flash:	
  3660                           
  3661                           ;pic16f1_bootload.c: 289: if (frame.address < 0x400 || frame.address + (frame.data_lengt
      +                          h>>1) > 8192u)
  3662                           
  3663                           ;incstack = 0
  3664                           ; Regs used in _Write_Flash: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3665  01F2  22C7  3180         	fcall	PL12	;call to abstracted procedure
  3666  01F4  1903               	skipnz
  3667  01F5  0222               	subwf	(_frame^(0+128)+2),w
  3668  01F6  1C03               	skipc
  3669  01F7  2A06               	goto	l179
  3670  01F8  3621               	lsrf	(_frame^(0+128)+1),w
  3671  01F9  0722               	addwf	(_frame^(0+128)+2),w
  3672  01FA  00F2               	movwf	??_Write_Flash
  3673  01FB  0823               	movf	((_frame+1)^(0+128)+2),w
  3674  01FC  1803               	skipnc
  3675  01FD  0A23               	incf	((_frame+1)^(0+128)+2),w
  3676  01FE  00F3               	movwf	??_Write_Flash+1
  3677  01FF  3020               	movlw	32
  3678  0200  0273               	subwf	??_Write_Flash+1,w
  3679  0201  3001               	movlw	1
  3680  0202  1903               	skipnz
  3681  0203  0272               	subwf	??_Write_Flash,w
  3682  0204  1C03               	skipc
  3683  0205  2A07               	goto	l1130
  3684  0206                     l179:	
  3685                           
  3686                           ;pic16f1_bootload.c: 290: {
  3687                           ;pic16f1_bootload.c: 291: frame.data_length = 0x01;
  3688                           
  3689                           ;pic16f1_bootload.c: 292: frame.data[0] = 0xFE;
  3690                           
  3691                           ;pic16f1_bootload.c: 293: return 5;
  3692  0206  2AB6               	ljmp	PL6	;call to abstracted procedure
  3693  0207                     l1130:	
  3694                           
  3695                           ;pic16f1_bootload.c: 294: }
  3696                           ;pic16f1_bootload.c: 295: NVMADR = frame.address;
  3697  0207  22A4  3180         	fcall	PL2	;call to abstracted procedure
  3698                           
  3699                           ;pic16f1_bootload.c: 296: NVMCON1 = 0xA4;
  3700  0209  30A4               	movlw	164
  3701  020A  0095               	movwf	21	;volsfr
  3702                           
  3703                           ;pic16f1_bootload.c: 297: EE_Key_1 = 0x55;
  3704                           
  3705                           ;pic16f1_bootload.c: 298: EE_Key_2 = 0xAA;
  3706  020B  22C1  3180         	fcall	PL10	;call to abstracted procedure
  3707                           
  3708                           ;pic16f1_bootload.c: 299: for (uint8_t i = 0; i < frame.data_length; i += 2)
  3709  020D  01F4               	clrf	Write_Flash@i
  3710  020E                     l1146:	
  3711  020E  0021               	movlb	1	; select bank1
  3712  020F  0821               	movf	(_frame^(0+128)+1),w
  3713  0210  0274               	subwf	Write_Flash@i,w
  3714  0211  1803               	btfsc	3,0
  3715  0212  2A3E               	goto	l187
  3716                           
  3717                           ;pic16f1_bootload.c: 300: {
  3718                           ;pic16f1_bootload.c: 301: if (((NVMADRL & (32u - 1)) == (32u - 1))
  3719                           ;pic16f1_bootload.c: 302: || (i == frame.data_length - 2))
  3720  0213  301F               	movlw	31
  3721  0214  0031               	movlb	17	; select bank17
  3722  0215  0511               	andwf	17,w	;volatile
  3723  0216  00F2               	movwf	??_Write_Flash
  3724  0217  3A1F               	xorlw	31
  3725  0218  1903               	btfsc	3,2
  3726  0219  2A27               	goto	l185
  3727  021A  0021               	movlb	1	; select bank1
  3728  021B  0821               	movf	(_frame^(0+128)+1),w
  3729  021C  3EFE               	addlw	254
  3730  021D  00F2               	movwf	??_Write_Flash
  3731  021E  30FF               	movlw	255
  3732  021F  1803               	skipnc
  3733  0220  3000               	movlw	0
  3734  0221  00F3               	movwf	??_Write_Flash+1
  3735  0222  0874               	movf	Write_Flash@i,w
  3736  0223  0672               	xorwf	??_Write_Flash,w
  3737  0224  0473               	iorwf	??_Write_Flash+1,w
  3738  0225  1D03               	skipz
  3739  0226  2A29               	goto	l1138
  3740  0227                     l185:	
  3741                           
  3742                           ;pic16f1_bootload.c: 303: NVMCON1bits.LWLO = 0;
  3743  0227  0031               	movlb	17	; select bank17
  3744  0228  1295               	bcf	21,5	;volsfr
  3745  0229                     l1138:	
  3746                           
  3747                           ;pic16f1_bootload.c: 304: NVMDATL = frame.data[i];
  3748  0229  0874               	movf	Write_Flash@i,w
  3749  022A  3EA4               	addlw	(low ((_frame| 0+4)))& (0+255)
  3750  022B  0086               	movwf	6
  3751  022C  0187               	clrf	7
  3752  022D  0801               	movf	1,w
  3753  022E  0031               	movlb	17	; select bank17
  3754  022F  0093               	movwf	19	;volatile
  3755                           
  3756                           ;pic16f1_bootload.c: 305: NVMDATH = frame.data[i+1];
  3757  0230  0874               	movf	Write_Flash@i,w
  3758  0231  3EA5               	addlw	(low ((_frame| 0+5)))& (0+255)
  3759  0232  0086               	movwf	6
  3760  0233  0801               	movf	1,w
  3761  0234  0094               	movwf	20	;volatile
  3762                           
  3763                           ;pic16f1_bootload.c: 307: StartWrite();
  3764  0235  2243  3180         	fcall	_StartWrite
  3765                           
  3766                           ;pic16f1_bootload.c: 308: ++ NVMADR;
  3767  0237  0031               	movlb	17	; select bank17
  3768  0238  0A91               	incf	17,f	;volatile
  3769  0239  1903               	skipnz
  3770  023A  0A92               	incf	18,f	;volatile
  3771  023B  0AF4               	incf	Write_Flash@i,f
  3772  023C  0AF4               	incf	Write_Flash@i,f
  3773  023D  2A0E               	goto	l1146
  3774  023E                     l187:	
  3775  023E  0031               	movlb	17	; select bank17
  3776  023F  1895               	btfsc	21,1	;volsfr
  3777  0240  2A3E               	goto	l187
  3778                           
  3779                           ;pic16f1_bootload.c: 311: NVMCON1bits.WREN = 0;
  3780  0241  1115               	bcf	21,2	;volsfr
  3781                           
  3782                           ;pic16f1_bootload.c: 312: EE_Key_1 = 0x00;
  3783                           
  3784                           ;pic16f1_bootload.c: 313: EE_Key_2 = 0x00;
  3785                           
  3786                           ;pic16f1_bootload.c: 314: frame.data_length = 0x01;
  3787                           
  3788                           ;pic16f1_bootload.c: 315: frame.data[0] = 0x01;
  3789                           
  3790                           ;pic16f1_bootload.c: 316: return 5;
  3791  0242  2AAC               	ljmp	PL4	;call to abstracted procedure
  3792  0243                     __end_of_Write_Flash:	
  3793  0243                     __ptext11:	
  3794 ;; *************** function _StartWrite *****************
  3795 ;; Defined at:
  3796 ;;		line 451 in file "src/pic16f1_bootload.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;		None
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		None
  3805 ;; Tracked objects:
  3806 ;;		On entry : 1F/11
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3814 ;;Total ram usage:        0 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; Hardware stack levels required when called:    1
  3817 ;; This function calls:
  3818 ;;		Nothing
  3819 ;; This function is called by:
  3820 ;;		_Write_Flash
  3821 ;;		_Erase_Flash
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           
  3826                           ;psect for function _StartWrite
  3827  0243                     _StartWrite:	
  3828                           
  3829                           ;incstack = 0
  3830                           ; Regs used in _StartWrite: []
  3831  0243  0064               	clrwdt	;# 
  3832  0244  0870               	movf	_EE_Key_1,w	;# 
  3833  0245  0096               	movwf	22	;# 
  3834  0246  0871               	movf	_EE_Key_2,w	;# 
  3835  0247  0096               	movwf	22	;# 
  3836  0248  1495               	bsf	21,1	;# 
  3837                           
  3838                           ;pic16f1_bootload.c: 464: __nop();
  3839  0249  0000               	nop
  3840                           
  3841                           ;pic16f1_bootload.c: 465: __nop();
  3842  024A  0000               	nop
  3843  024B  0008               	return
  3844  024C                     __end_of_StartWrite:	
  3845  024C                     __ptext9:	
  3846 ;; *************** function _Get_Version_Data *****************
  3847 ;; Defined at:
  3848 ;;		line 247 in file "src/pic16f1_bootload.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;		None
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      unsigned char 
  3855 ;; Registers used:
  3856 ;;		wreg, status,2
  3857 ;; Tracked objects:
  3858 ;;		On entry : 1E/1
  3859 ;;		On exit  : 1F/1
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3866 ;;Total ram usage:        0 bytes
  3867 ;; Hardware stack levels used:    1
  3868 ;; Hardware stack levels required when called:    1
  3869 ;; This function calls:
  3870 ;;		Nothing
  3871 ;; This function is called by:
  3872 ;;		_ProcessBootBuffer
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           
  3877                           ;psect for function _Get_Version_Data
  3878  024C                     _Get_Version_Data:	
  3879                           
  3880                           ;pic16f1_bootload.c: 249: frame.data_length = 8;
  3881                           
  3882                           ;incstack = 0
  3883                           ; Regs used in _Get_Version_Data: [wreg+status,2]
  3884  024C  3008               	movlw	8
  3885  024D  0021               	movlb	1	; select bank1
  3886  024E  00A1               	movwf	(_frame^(0+128)+1)
  3887  024F  3004               	movlw	4
  3888                           
  3889                           ;pic16f1_bootload.c: 250: frame.data[0] = 0x00;
  3890  0250  01A4               	clrf	(_frame^(0+128)+4)
  3891                           
  3892                           ;pic16f1_bootload.c: 251: frame.data[1] = 0x01;
  3893  0251  01A5               	clrf	(_frame^(0+128)+5)
  3894  0252  0AA5               	incf	(_frame^(0+128)+5),f
  3895  0253  01A6               	clrf	(_frame^(0+128)+6)
  3896                           
  3897                           ;pic16f1_bootload.c: 253: frame.data[3] = 0x04;
  3898  0254  00A7               	movwf	(_frame^(0+128)+7)
  3899                           
  3900                           ;pic16f1_bootload.c: 254: frame.data[4] = 0xFF;
  3901  0255  30FF               	movlw	255
  3902  0256  00A8               	movwf	(_frame^(0+128)+8)
  3903                           
  3904                           ;pic16f1_bootload.c: 255: frame.data[5] = 0x1F;
  3905  0257  301F               	movlw	31
  3906  0258  00A9               	movwf	(_frame^(0+128)+9)
  3907                           
  3908                           ;pic16f1_bootload.c: 256: frame.data[6] = 32u;
  3909  0259  3020               	movlw	32
  3910  025A  00AA               	movwf	(_frame^(0+128)+10)
  3911                           
  3912                           ;pic16f1_bootload.c: 257: frame.data[7] = 32u;
  3913  025B  00AB               	movwf	(_frame^(0+128)+11)
  3914                           
  3915                           ;pic16f1_bootload.c: 259: return 12;
  3916  025C  340C               	retlw	12
  3917  025D                     __end_of_Get_Version_Data:	
  3918  025D                     __ptext2:	
  3919 ;; *************** function _SYSTEM_Initialize *****************
  3920 ;; Defined at:
  3921 ;;		line 106 in file "src/main.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;		None
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;		None
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  1    wreg      void 
  3928 ;; Registers used:
  3929 ;;		wreg, status,2, status,0, pclath, cstack
  3930 ;; Tracked objects:
  3931 ;;		On entry : 1F/11
  3932 ;;		On exit  : 1F/3
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3939 ;;Total ram usage:        0 bytes
  3940 ;; Hardware stack levels used:    1
  3941 ;; Hardware stack levels required when called:    2
  3942 ;; This function calls:
  3943 ;;		_EUSART_Initialize
  3944 ;;		_OSCILLATOR_Initialize
  3945 ;;		_PIN_MANAGER_Initialize
  3946 ;; This function is called by:
  3947 ;;		_BOOTLOADER_Initialize
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           
  3952                           ;psect for function _SYSTEM_Initialize
  3953  025D                     _SYSTEM_Initialize:	
  3954                           
  3955                           ;main.c: 108: PIN_MANAGER_Initialize();
  3956                           
  3957                           ;incstack = 0
  3958                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3959  025D  2262  3180         	fcall	_PIN_MANAGER_Initialize
  3960                           
  3961                           ;main.c: 109: OSCILLATOR_Initialize();
  3962  025F  229C  3180         	fcall	_OSCILLATOR_Initialize
  3963                           
  3964                           ;main.c: 110: EUSART_Initialize();
  3965  0261  2A91               	ljmp	l908
  3966  0262                     __end_of_SYSTEM_Initialize:	
  3967  0262                     __ptext3:	
  3968 ;; *************** function _PIN_MANAGER_Initialize *****************
  3969 ;; Defined at:
  3970 ;;		line 13 in file "src/pin.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;		None
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;		None
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  1    wreg      void 
  3977 ;; Registers used:
  3978 ;;		wreg, status,2, status,0
  3979 ;; Tracked objects:
  3980 ;;		On entry : 1F/11
  3981 ;;		On exit  : 1F/1C
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3988 ;;Total ram usage:        0 bytes
  3989 ;; Hardware stack levels used:    1
  3990 ;; Hardware stack levels required when called:    1
  3991 ;; This function calls:
  3992 ;;		Nothing
  3993 ;; This function is called by:
  3994 ;;		_SYSTEM_Initialize
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           
  3999                           ;psect for function _PIN_MANAGER_Initialize
  4000  0262                     _PIN_MANAGER_Initialize:	
  4001                           
  4002                           ;pin.c: 18: LATA = 0x00;
  4003                           
  4004                           ;incstack = 0
  4005                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  4006  0262  0022               	movlb	2	; select bank2
  4007  0263  018C               	clrf	12	;volatile
  4008                           
  4009                           ;pin.c: 19: LATB = 0x10;
  4010  0264  3010               	movlw	16
  4011  0265  008D               	movwf	13	;volatile
  4012                           
  4013                           ;pin.c: 20: LATC = 0x00;
  4014  0266  018E               	clrf	14	;volatile
  4015                           
  4016                           ;pin.c: 22: TRISA = 0x37;
  4017  0267  3037               	movlw	55
  4018  0268  0021               	movlb	1	; select bank1
  4019  0269  008C               	movwf	12	;volatile
  4020                           
  4021                           ;pin.c: 23: TRISB = 0xC0;
  4022  026A  30C0               	movlw	192
  4023  026B  008D               	movwf	13	;volatile
  4024                           
  4025                           ;pin.c: 24: TRISC = 0x05;
  4026  026C  3005               	movlw	5
  4027  026D  008E               	movwf	14	;volatile
  4028                           
  4029                           ;pin.c: 29: ANSELC = 0x00;
  4030  026E  0023               	movlb	3	; select bank3
  4031  026F  018E               	clrf	14	;volatile
  4032                           
  4033                           ;pin.c: 30: ANSELB = 0x00;
  4034  0270  018D               	clrf	13	;volatile
  4035                           
  4036                           ;pin.c: 31: ANSELA = 0x00;
  4037  0271  018C               	clrf	12	;volatile
  4038                           
  4039                           ;pin.c: 36: WPUB = 0x00;
  4040  0272  0024               	movlb	4	; select bank4
  4041  0273  018D               	clrf	13	;volatile
  4042                           
  4043                           ;pin.c: 37: WPUA = 0x04;
  4044  0274  3004               	movlw	4
  4045  0275  008C               	movwf	12	;volatile
  4046                           
  4047                           ;pin.c: 38: WPUC = 0x00;
  4048  0276  018E               	clrf	14	;volatile
  4049                           
  4050                           ;pin.c: 43: ODCONA = 0x00;
  4051  0277  0025               	movlb	5	; select bank5
  4052  0278  018C               	clrf	12	;volatile
  4053                           
  4054                           ;pin.c: 44: ODCONB = 0x00;
  4055  0279  018D               	clrf	13	;volatile
  4056                           
  4057                           ;pin.c: 45: ODCONC = 0x00;
  4058  027A  018E               	clrf	14	;volatile
  4059                           
  4060                           ;pin.c: 47: PPSLOCK = 0x55;
  4061  027B  3055               	movlw	85
  4062  027C  003C               	movlb	28	; select bank28
  4063  027D  008F               	movwf	15	;volsfr
  4064                           
  4065                           ;pin.c: 48: PPSLOCK = 0xAA;
  4066  027E  30AA               	movlw	170
  4067  027F  008F               	movwf	15	;volsfr
  4068                           
  4069                           ;pin.c: 49: PPSLOCKbits.PPSLOCKED = 0x00;
  4070  0280  100F               	bcf	15,0	;volsfr
  4071                           
  4072                           ;pin.c: 53: RXPPSbits.RXPPS = 0x12;
  4073  0281  0824               	movf	36,w	;volatile
  4074  0282  39E0               	andlw	-32
  4075  0283  3812               	iorlw	18
  4076  0284  00A4               	movwf	36	;volatile
  4077                           
  4078                           ;pin.c: 54: RB4PPSbits.RB4PPS = 0x14;
  4079  0285  003D               	movlb	29	; select bank29
  4080  0286  081C               	movf	28,w	;volatile
  4081  0287  39E0               	andlw	-32
  4082  0288  3814               	iorlw	20
  4083  0289  009C               	movwf	28	;volatile
  4084                           
  4085                           ;pin.c: 56: PPSLOCK = 0x55;
  4086  028A  3055               	movlw	85
  4087  028B  003C               	movlb	28	; select bank28
  4088  028C  008F               	movwf	15	;volsfr
  4089                           
  4090                           ;pin.c: 57: PPSLOCK = 0xAA;
  4091  028D  30AA               	movlw	170
  4092  028E  008F               	movwf	15	;volsfr
  4093                           
  4094                           ;pin.c: 58: PPSLOCKbits.PPSLOCKED = 0x01;
  4095  028F  140F               	bsf	15,0	;volsfr
  4096  0290  0008               	return
  4097  0291                     __end_of_PIN_MANAGER_Initialize:	
  4098  0291                     __ptext5:	
  4099 ;; *************** function _EUSART_Initialize *****************
  4100 ;; Defined at:
  4101 ;;		line 11 in file "src/eusart.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;		None
  4104 ;; Auto vars:     Size  Location     Type
  4105 ;;		None
  4106 ;; Return value:  Size  Location     Type
  4107 ;;                  1    wreg      void 
  4108 ;; Registers used:
  4109 ;;		wreg, status,2
  4110 ;; Tracked objects:
  4111 ;;		On entry : 1F/12
  4112 ;;		On exit  : 1F/3
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4119 ;;Total ram usage:        0 bytes
  4120 ;; Hardware stack levels used:    1
  4121 ;; Hardware stack levels required when called:    1
  4122 ;; This function calls:
  4123 ;;		Nothing
  4124 ;; This function is called by:
  4125 ;;		_SYSTEM_Initialize
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           
  4130                           ;psect for function _EUSART_Initialize
  4131  0291                     _EUSART_Initialize:	
  4132  0291                     l908:	
  4133                           ;incstack = 0
  4134                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  4135                           
  4136                           
  4137                           ;eusart.c: 16: BAUD1CON = 0x08;
  4138  0291  3008               	movlw	8
  4139  0292  0023               	movlb	3	; select bank3
  4140  0293  009F               	movwf	31	;volatile
  4141                           
  4142                           ;eusart.c: 19: RC1STA = 0x90;
  4143  0294  3090               	movlw	144
  4144  0295  009D               	movwf	29	;volatile
  4145                           
  4146                           ;eusart.c: 22: TX1STA = 0x24;
  4147  0296  3024               	movlw	36
  4148  0297  009E               	movwf	30	;volatile
  4149                           
  4150                           ;eusart.c: 25: SP1BRGL = 25;
  4151  0298  3019               	movlw	25
  4152  0299  009B               	movwf	27	;volatile
  4153                           
  4154                           ;eusart.c: 28: SP1BRGH = 0;
  4155  029A  019C               	clrf	28	;volatile
  4156  029B  0008               	return
  4157  029C                     __end_of_EUSART_Initialize:	
  4158  029C                     __ptext4:	
  4159 ;; *************** function _OSCILLATOR_Initialize *****************
  4160 ;; Defined at:
  4161 ;;		line 88 in file "src/main.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;		None
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;		None
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  1    wreg      void 
  4168 ;; Registers used:
  4169 ;;		wreg, status,2
  4170 ;; Tracked objects:
  4171 ;;		On entry : 1F/1C
  4172 ;;		On exit  : 1F/12
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4179 ;;Total ram usage:        0 bytes
  4180 ;; Hardware stack levels used:    1
  4181 ;; Hardware stack levels required when called:    1
  4182 ;; This function calls:
  4183 ;;		Nothing
  4184 ;; This function is called by:
  4185 ;;		_SYSTEM_Initialize
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           
  4190                           ;psect for function _OSCILLATOR_Initialize
  4191  029C                     _OSCILLATOR_Initialize:	
  4192                           
  4193                           ;main.c: 91: OSCCON1 = 0x60;
  4194                           
  4195                           ;incstack = 0
  4196                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4197  029C  3060               	movlw	96
  4198  029D  0032               	movlb	18	; select bank18
  4199  029E  0099               	movwf	25	;volatile
  4200                           
  4201                           ;main.c: 93: OSCCON3 = 0x00;
  4202  029F  019B               	clrf	27	;volatile
  4203                           
  4204                           ;main.c: 95: OSCEN = 0x00;
  4205  02A0  019D               	clrf	29	;volatile
  4206                           
  4207                           ;main.c: 99: OSCFRQ = 0x00;
  4208  02A1  019F               	clrf	31	;volatile
  4209                           
  4210                           ;main.c: 101: OSCTUNE = 0x00;
  4211  02A2  019E               	clrf	30	;volatile
  4212  02A3  0008               	return
  4213  02A4                     __end_of_OSCILLATOR_Initialize:	
  4214  02A4                     PL2:	
  4215  02A4  0823               	movf	((_frame+1)^(0+128)+2),w
  4216  02A5  0031               	movlb	17	; select bank17
  4217  02A6  0092               	movwf	18	;volatile
  4218  02A7  0021               	movlb	1	; select bank1
  4219  02A8  0822               	movf	(_frame^(0+128)+2),w
  4220  02A9  0031               	movlb	17	; select bank17
  4221  02AA  0091               	movwf	17	;volatile
  4222  02AB  0008               	return
  4223  02AC                     __end_ofPL2:	
  4224  02AC                     PL4:	
  4225  02AC  0020               	movlb	0	; select bank0
  4226  02AD  01F0               	clrf	112
  4227  02AE  01F1               	clrf	113
  4228  02AF  0021               	movlb	1	; select bank1
  4229  02B0  3005               	movlw	5
  4230  02B1  01A1               	clrf	(_frame^(0+128)+1)
  4231  02B2  0AA1               	incf	(_frame^(0+128)+1),f
  4232  02B3  01A4               	clrf	(_frame^(0+128)+4)
  4233  02B4  0AA4               	incf	(_frame^(0+128)+4),f
  4234  02B5  0008               	return
  4235  02B6                     __end_ofPL4:	
  4236  02B6                     PL6:	
  4237  02B6  30FE               	movlw	254
  4238  02B7  01A1               	clrf	(_frame^(0+128)+1)
  4239  02B8  0AA1               	incf	(_frame^(0+128)+1),f
  4240  02B9  00A4               	movwf	(_frame^(0+128)+4)
  4241  02BA  3405               	retlw	5
  4242  02BB                     __end_ofPL6:	
  4243  02BB                     PL8:	
  4244  02BB  301F               	movlw	31
  4245  02BC  0031               	movlb	17	; select bank17
  4246  02BD  0092               	movwf	18	;volatile
  4247  02BE  30FF               	movlw	255
  4248  02BF  0091               	movwf	17	;volatile
  4249  02C0  0008               	return
  4250  02C1                     __end_ofPL8:	
  4251  02C1                     PL10:	
  4252  02C1  3055               	movlw	85
  4253  02C2  0020               	movlb	0	; select bank0
  4254  02C3  00F0               	movwf	112
  4255  02C4  30AA               	movlw	170
  4256  02C5  00F1               	movwf	113
  4257  02C6  0008               	return
  4258  02C7                     __end_ofPL10:	
  4259  02C7                     PL12:	
  4260  02C7  3004               	movlw	4
  4261  02C8  0021               	movlb	1	; select bank1
  4262  02C9  0223               	subwf	((_frame+1)^(0+128)+2),w
  4263  02CA  3400               	retlw	0
  4264  02CB                     __end_ofPL12:	
  4265                           
  4266                           	psect	bssCOMMON
  4267  0079                     __pbssCOMMON:	
  4268  0079                     _reset_pending:	
  4269  0079                     	ds	1
  4270                           
  4271                           	psect	dataBANK0
  4272  0029                     __pdataBANK0:	
  4273  0029                     BLE_SendCMD@F7866:	
  4274  0029                     	ds	7
  4275                           
  4276                           	psect	bssBANK1
  4277  00A0                     __pbssBANK1:	
  4278  00A0                     _frame:	
  4279  00A0                     	ds	68
  4280                           
  4281                           	psect	clrtext
  4282  02E5                     clear_ram0:	
  4283                           ;	Called with FSR0 containing the base address, and
  4284                           ;	WREG with the size to clear
  4285                           
  4286  02E5  0064               	clrwdt	;clear the watchdog before getting into this loop
  4287  02E6                     clrloop0:	
  4288  02E6  0180               	clrf	0	;clear RAM location pointed to by FSR
  4289  02E7  3101               	addfsr 0,1
  4290  02E8  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4291  02E9  2AE6               	goto	clrloop0	;have we reached the end yet?
  4292  02EA  3400               	retlw	0	;all done for this memory range, return
  4293                           
  4294                           	psect	cstackCOMMON
  4295  0072                     __pcstackCOMMON:	
  4296  0072                     ?_EUSART_Write:	
  4297  0072                     ??_EUSART_Write:	
  4298                           ; 1 bytes @ 0x0
  4299                           
  4300  0072                     ?_EUSART_Read:	
  4301                           ; 1 bytes @ 0x0
  4302                           
  4303  0072                     ??_EUSART_Read:	
  4304                           ; 1 bytes @ 0x0
  4305                           
  4306  0072                     ?_PIN_MANAGER_Initialize:	
  4307                           ; 1 bytes @ 0x0
  4308                           
  4309  0072                     ??_PIN_MANAGER_Initialize:	
  4310                           ; 1 bytes @ 0x0
  4311                           
  4312  0072                     ?_BOOTLOADER_Initialize:	
  4313                           ; 1 bytes @ 0x0
  4314                           
  4315  0072                     ?_Bootload_Required:	
  4316                           ; 1 bytes @ 0x0
  4317                           
  4318  0072                     ??_Bootload_Required:	
  4319                           ; 1 bytes @ 0x0
  4320                           
  4321  0072                     ?_Run_Bootloader:	
  4322                           ; 1 bytes @ 0x0
  4323                           
  4324  0072                     ?_Get_Version_Data:	
  4325                           ; 1 bytes @ 0x0
  4326                           
  4327  0072                     ??_Get_Version_Data:	
  4328                           ; 1 bytes @ 0x0
  4329                           
  4330  0072                     ?_Write_Flash:	
  4331                           ; 1 bytes @ 0x0
  4332                           
  4333  0072                     ??_Write_Flash:	
  4334                           ; 1 bytes @ 0x0
  4335                           
  4336  0072                     ?_Erase_Flash:	
  4337                           ; 1 bytes @ 0x0
  4338                           
  4339  0072                     ??_Erase_Flash:	
  4340                           ; 1 bytes @ 0x0
  4341                           
  4342  0072                     ?_Calc_Checksum:	
  4343                           ; 1 bytes @ 0x0
  4344                           
  4345  0072                     ??_Calc_Checksum:	
  4346                           ; 1 bytes @ 0x0
  4347                           
  4348  0072                     ?_StartWrite:	
  4349                           ; 1 bytes @ 0x0
  4350                           
  4351  0072                     ??_StartWrite:	
  4352                           ; 1 bytes @ 0x0
  4353                           
  4354  0072                     ?_BLE_Init:	
  4355                           ; 1 bytes @ 0x0
  4356                           
  4357  0072                     ?_EUSART_Initialize:	
  4358                           ; 1 bytes @ 0x0
  4359                           
  4360  0072                     ??_EUSART_Initialize:	
  4361                           ; 1 bytes @ 0x0
  4362                           
  4363  0072                     ?_OSCILLATOR_Initialize:	
  4364                           ; 1 bytes @ 0x0
  4365                           
  4366  0072                     ??_OSCILLATOR_Initialize:	
  4367                           ; 1 bytes @ 0x0
  4368                           
  4369  0072                     ?_SYSTEM_Initialize:	
  4370                           ; 1 bytes @ 0x0
  4371                           
  4372  0072                     ??_SYSTEM_Initialize:	
  4373                           ; 1 bytes @ 0x0
  4374                           
  4375  0072                     ?_main:	
  4376                           ; 1 bytes @ 0x0
  4377                           
  4378  0072                     ?_service_isr:	
  4379                           ; 1 bytes @ 0x0
  4380                           
  4381  0072                     ??_service_isr:	
  4382                           ; 1 bytes @ 0x0
  4383                           
  4384  0072                     ?_ProcessBootBuffer:	
  4385                           ; 1 bytes @ 0x0
  4386                           
  4387  0072                     ?_Check_Device_Reset:	
  4388                           ; 1 bytes @ 0x0
  4389                           
  4390  0072                     ??_Check_Device_Reset:	
  4391                           ; 1 bytes @ 0x0
  4392                           
  4393  0072                     EUSART_Write@byte:	
  4394                           ; 1 bytes @ 0x0
  4395                           
  4396  0072                     Calc_Checksum@i:	
  4397                           ; 1 bytes @ 0x0
  4398                           
  4399                           
  4400                           ; 2 bytes @ 0x0
  4401  0072                     	ds	1
  4402  0073                     ?_BLE_SendCMD:	
  4403  0073                     ?_BLE_SendData:	
  4404                           ; 1 bytes @ 0x1
  4405                           
  4406  0073                     BLE_SendData@len:	
  4407                           ; 1 bytes @ 0x1
  4408                           
  4409  0073                     BLE_SendCMD@pBuf:	
  4410                           ; 1 bytes @ 0x1
  4411                           
  4412                           
  4413                           ; 2 bytes @ 0x1
  4414  0073                     	ds	1
  4415  0074                     ??_BLE_SendData:	
  4416  0074                     BLE_SendData@pbuf:	
  4417                           ; 1 bytes @ 0x2
  4418                           
  4419  0074                     Write_Flash@i:	
  4420                           ; 1 bytes @ 0x2
  4421                           
  4422  0074                     Erase_Flash@i:	
  4423                           ; 1 bytes @ 0x2
  4424                           
  4425  0074                     Calc_Checksum@endAddr:	
  4426                           ; 2 bytes @ 0x2
  4427                           
  4428                           
  4429                           ; 2 bytes @ 0x2
  4430  0074                     	ds	1
  4431  0075                     ??_BLE_SendCMD:	
  4432                           
  4433                           ; 1 bytes @ 0x3
  4434  0075                     	ds	1
  4435  0076                     ??_BLE_Init:	
  4436  0076                     Calc_Checksum@check_sum:	
  4437                           ; 1 bytes @ 0x4
  4438                           
  4439                           
  4440                           ; 2 bytes @ 0x4
  4441  0076                     	ds	2
  4442  0078                     ??_ProcessBootBuffer:	
  4443  0078                     ProcessBootBuffer@len:	
  4444                           ; 1 bytes @ 0x6
  4445                           
  4446                           
  4447                           ; 1 bytes @ 0x6
  4448  0078                     	ds	1
  4449  0079                     ??_BOOTLOADER_Initialize:	
  4450  0079                     ??_Run_Bootloader:	
  4451                           ; 1 bytes @ 0x7
  4452                           
  4453  0079                     ??_main:	
  4454                           ; 1 bytes @ 0x7
  4455                           
  4456                           
  4457                           	psect	cstackBANK0
  4458  0020                     __pcstackBANK0:	
  4459                           ; 1 bytes @ 0x7
  4460                           
  4461  0020                     Run_Bootloader@ch:	
  4462  0020                     BLE_SendCMD@ack:	
  4463                           ; 1 bytes @ 0x0
  4464                           
  4465                           
  4466                           ; 7 bytes @ 0x0
  4467  0020                     	ds	1
  4468  0021                     Run_Bootloader@idle_count:	
  4469                           
  4470                           ; 2 bytes @ 0x1
  4471  0021                     	ds	2
  4472  0023                     Run_Bootloader@receiving:	
  4473                           
  4474                           ; 1 bytes @ 0x3
  4475  0023                     	ds	1
  4476  0024                     Run_Bootloader@msg_length:	
  4477                           
  4478                           ; 1 bytes @ 0x4
  4479  0024                     	ds	1
  4480  0025                     Run_Bootloader@index:	
  4481                           
  4482                           ; 1 bytes @ 0x5
  4483  0025                     	ds	2
  4484  0027                     BLE_SendCMD@rev:	
  4485                           
  4486                           ; 1 bytes @ 0x7
  4487  0027                     	ds	1
  4488  0028                     BLE_SendCMD@index:	
  4489                           
  4490                           ; 1 bytes @ 0x8
  4491  0028                     	ds	1
  4492                           
  4493                           	psect	intentry
  4494  0004                     __pintentry:	
  4495 ;; *************** function _service_isr *****************
  4496 ;; Defined at:
  4497 ;;		line 154 in file "src/pic16f1_bootload.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;		None
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;		None
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  1    wreg      void 
  4504 ;; Registers used:
  4505 ;;		None
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4515 ;;Total ram usage:        0 bytes
  4516 ;; Hardware stack levels used:    1
  4517 ;; This function calls:
  4518 ;;		Nothing
  4519 ;; This function is called by:
  4520 ;;		Interrupt level 1
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524  0004                     _service_isr:	
  4525                           
  4526                           ;incstack = 0
  4527  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4528                           
  4529                           ; Regs used in _service_isr: []
  4530  0005  3180               	pagesel	$
  4531  0006  3184               	pagesel	1028	;# 
  4532  0007  2C04               	goto	1028	;# 
  4533  0008  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4534  0009  0009               	retfie
  4535  000A                     __end_of_service_isr:	
  4536  007E                     btemp	set	126	;btemp
  4537  007E                     int$flags	set	126
  4538  007E                     wtemp0	set	126


Data Sizes:
    Strings     26
    Constant    0
    Data        7
    BSS         69
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           12      7       8
    BANK0            80      9      16
    BANK1            80      0      68
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    BLE_SendData@pbuf	PTR unsigned char  size(1) Largest target is 68
		 -> frame(BANK1[68]), 

    BLE_SendCMD@pBuf	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _Run_Bootloader->_ProcessBootBuffer
    _ProcessBootBuffer->_Calc_Checksum
    _BLE_SendData->_EUSART_Write
    _BLE_Init->_BLE_SendCMD
    _BLE_SendCMD->_EUSART_Write

Critical Paths under _service_isr in COMMON

    None.

Critical Paths under _main in BANK0

    _BLE_Init->_BLE_SendCMD

Critical Paths under _service_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _service_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _service_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _service_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _service_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _service_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _service_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _service_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _service_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _service_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _service_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _service_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _service_isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     906
              _BOOTLOADER_Initialize
 ---------------------------------------------------------------------------------
 (1) _BOOTLOADER_Initialize                                0     0      0     906
                           _BLE_Init
                  _Bootload_Required
                     _Run_Bootloader
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Run_Bootloader                                       6     6      0     616
                                              0 BANK0      6     6      0
                       _BLE_SendData
                 _Check_Device_Reset
                        _EUSART_Read
                  _ProcessBootBuffer
 ---------------------------------------------------------------------------------
 (3) _ProcessBootBuffer                                    1     1      0     259
                                              6 COMMON     1     1      0
                      _Calc_Checksum
                        _Erase_Flash
                   _Get_Version_Data
                        _Write_Flash
 ---------------------------------------------------------------------------------
 (4) _Write_Flash                                          3     3      0      90
                                              0 COMMON     3     3      0
                         _StartWrite
 ---------------------------------------------------------------------------------
 (4) _Get_Version_Data                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Erase_Flash                                          4     4      0      24
                                              0 COMMON     4     4      0
                         _StartWrite
 ---------------------------------------------------------------------------------
 (5) _StartWrite                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Calc_Checksum                                        6     6      0     116
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (3) _Check_Device_Reset                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _BLE_SendData                                         2     1      1     161
                                              1 COMMON     2     1      1
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _Bootload_Required                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BLE_Init                                             1     1      0     290
                                              4 COMMON     1     1      0
                        _BLE_SendCMD
 ---------------------------------------------------------------------------------
 (3) _BLE_SendCMD                                         12    10      2     290
                                              1 COMMON     3     1      2
                                              0 BANK0      9     9      0
                        _EUSART_Read
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _service_isr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BOOTLOADER_Initialize
     _BLE_Init
       _BLE_SendCMD
         _EUSART_Read
         _EUSART_Write
     _Bootload_Required
     _Run_Bootloader
       _BLE_SendData
         _EUSART_Write
       _Check_Device_Reset
       _EUSART_Read
       _ProcessBootBuffer
         _Calc_Checksum
         _Erase_Flash
           _StartWrite
         _Get_Version_Data
         _Write_Flash
           _StartWrite
     _SYSTEM_Initialize
       _EUSART_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize

 _service_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            C      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               C      7       8       2       66.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      9      10       5       20.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      44       7       85.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      5C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      5C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Aug 10 16:02:52 2018

                  ??_Erase_Flash 0072                      __CFG_CP$OFF 0000                               PL2 02A4  
                             PL4 02AC                               PL6 02B6                               PL8 02BB  
                             l31 0127                               l61 00FB                               l68 0106  
         __size_of_Calc_Checksum 003D                              PL10 02C1                              PL12 02C7  
                    __CFG_LVP$ON 0000                              l205 018E                              l207 019A  
                            l216 013A                              l241 0068                              l236 0040  
                            l237 0041                              l185 0227                              l169 015A  
                            l187 023E                              l179 0206                              l198 01ED  
                            l908 0291             __size_of_Write_Flash 0051                              u510 00CC  
                            u505 01A0                     __CFG_CPD$OFF 0000                              u465 01D1  
                            u707 00A0                              u717 00AE                              u727 00BC  
                            u687 0141                              u697 0096                              wreg 0009  
          _BOOTLOADER_Initialize 0029                     ?_EUSART_Read 0072                             l1130 0207  
                           l1108 0103                             l1206 018F                             l1240 00F4  
                           l1232 00D4                             l1160 01BE                             l1234 00E6  
                           l1242 00F5                             l1250 011B                             l1218 01B2  
                           l1138 0229                             l1146 020E                             l1260 0151  
                           l1332 0061                             l1166 01C0                             l1270 0161  
                           l1262 0154                             l1254 0148                             l1256 014B  
                           l1344 0079                             l1186 01C7                             l1266 0158  
                           l1258 014E                             l1370 0033                             l1276 0164  
                           l1348 007D                             l1278 0179                             STR_1 02DA  
                   __CFG_WDTE$ON 0000                             STR_2 02CB                             _LATA 010C  
                           _LATB 010D                             _LATC 010E                             _TRMT 0CF1  
                           _WPUA 020C                             _WPUB 020D                             _WPUC 020E  
                           _main 0026                             fsr0h 0005                             fsr1h 0007  
                           indf0 0000                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             btemp 007E                    __CFG_BOREN$ON 0000  
                  __CFG_BORV$LOW 0000                             start 000A                    __CFG_CSWEN$ON 0000  
                  __CFG_MCLRE$ON 0000                 __end_of_BLE_Init 00C2       __size_of_ProcessBootBuffer 0034  
                  ?_EUSART_Write 0072   __size_of_OSCILLATOR_Initialize 0008    __end_of_OSCILLATOR_Initialize 02A4  
                          ?_main 0072              __end_of_Erase_Flash 01F2                   __CFG_DEBUG$OFF 0000  
                          _RCREG 0199                            _OSCEN 091D                            _TRISA 008C  
                          _TRISB 008D                            _TRISC 008E             __end_of_BLE_SendData 012B  
                  __CFG_PWRTE$ON 0000                    __CFG_WRT$BOOT 0000                   __CFG_FCMEN$OFF 0000  
                          _frame 00A0                    _Calc_Checksum 017B                            status 0003  
                          wtemp0 007E                  __initialization 000C                     __end_of_main 0029  
           __size_of_BLE_SendCMD 0039                   BLE_SendCMD@ack 0020                   ??_EUSART_Write 0072  
                 BLE_SendCMD@rev 0027                           ??_main 0079           ?_BOOTLOADER_Initialize 0072  
                         NVMCON1 0895                           NVMCON2 0896                           _ANSELA 018C  
                         _ANSELB 018D                           _ANSELC 018E               __CFG_RSTOSC$HFINT1 0000  
                 ?_Calc_Checksum 0072                           _RC1REG 0199                           _RC1STA 019D  
                         _ODCONA 028C                           _ODCONB 028D                           _ODCONC 028E  
                         _OSCFRQ 091F                           _NVMADR 0891                           _NVMDAT 0893  
                         _TX1REG 019A                           _TX1STA 019E                           _STKPTR 0FED  
      __size_of_Get_Version_Data 0011                      _Erase_Flash 01B8                   __CFG_STVREN$ON 0000  
    __size_of_Check_Device_Reset 001C                     ?_service_isr 0072                        ?_BLE_Init 0072  
                     _StartWrite 0243             __size_of_EUSART_Read 000A                _SYSTEM_Initialize 025D  
        __end_of__initialization 0023               ?_SYSTEM_Initialize 0072                   __pcstackCOMMON 0072  
                   __pidataBANK0 0000              ??_SYSTEM_Initialize 0072            __size_of_BLE_SendData 0011  
                     __end_ofPL2 02AC                       __end_ofPL4 02B6                       __end_ofPL6 02BB  
                     __end_ofPL8 02C1                  BLE_SendCMD@pBuf 0073                  ??_Calc_Checksum 0072  
      __end_of_SYSTEM_Initialize 0262                       ??_BLE_Init 0076                       __pbssBANK1 00A0  
           __end_of_EUSART_Write 010D                     Write_Flash@i 0074                     _BLE_SendData 011A  
                     __pmaintext 0026                  BLE_SendData@len 0073                       __pintentry 0004  
                  ??_Write_Flash 0072                          _SP1BRGH 019C                          _SP1BRGL 019B  
                        _OSCCON1 0919                          _OSCCON3 091B                          _NVMADRL 0891  
                        _NVMDATH 0894                          _OSCTUNE 091E                          _NVMDATL 0893  
                        _NVMCON1 0895                          _NVMCON2 0896                          _PPSLOCK 0E0F  
                    ?_StartWrite 0072          __size_of_Run_Bootloader 0058                 _Get_Version_Data 024C  
        ??_BOOTLOADER_Initialize 0079                          __ptext1 0029                          __ptext2 025D  
                        __ptext3 0262                          __ptext4 029C                          __ptext5 0291  
                        __ptext6 0039                          __ptext7 0147                          __ptext8 01F2  
                        __ptext9 024C            _OSCILLATOR_Initialize 029C              __end_of_Write_Flash 0243  
       ??_PIN_MANAGER_Initialize 0072       __size_of_SYSTEM_Initialize 0005                          clrloop0 02E6  
           __size_of_service_isr 0006             end_of_initialization 0023                _EUSART_Initialize 0291  
                  ??_BLE_SendCMD 0075               ?_EUSART_Initialize 0072                     ?_Erase_Flash 0072  
            __size_of_StartWrite 0009              ??_EUSART_Initialize 0072            __size_of_EUSART_Write 0008  
               __CFG_FEXTOSC$OFF 0000                        _RXPPSbits 0E24                __size_of_BLE_Init 0031  
      __end_of_EUSART_Initialize 029C                        _TXSTAbits 019E       __end_of_Check_Device_Reset 0147  
            __end_of_BLE_SendCMD 00FB                      _Write_Flash 01F2                     _EUSART_Write 0105  
         ?_OSCILLATOR_Initialize 0072                 BLE_SendCMD@F7866 0029                      __end_ofPL10 02C7  
                    __end_ofPL12 02CB              start_initialization 000C  __size_of_PIN_MANAGER_Initialize 002F  
                  ??_EUSART_Read 0072                 BLE_SendCMD@index 0028                   _Run_Bootloader 0039  
               __CFG_LPBOREN$OFF 0000                _Bootload_Required 010D               ?_Bootload_Required 0072  
                    __pdataBANK0 0029              ??_Bootload_Required 0072         __end_of_Get_Version_Data 025D  
                    __pbssCOMMON 0079                        ___latbits 0002                    __pcstackBANK0 0020  
                   ??_StartWrite 0072            __end_of_Calc_Checksum 01B8           __end_of_Run_Bootloader 0091  
     __size_of_EUSART_Initialize 000B              __end_of_EUSART_Read 0105        __end_of_Bootload_Required 011A  
                    _BLE_SendCMD 00C2           _PIN_MANAGER_Initialize 0262                 __CFG_PPS1WAY$OFF 0000  
           __size_of_Erase_Flash 003A               __end_of_StartWrite 024C                 BLE_SendData@pbuf 0074  
       Run_Bootloader@idle_count 0021                         _BAUD1CON 019F   __size_of_BOOTLOADER_Initialize 0010  
  __end_of_BOOTLOADER_Initialize 0039                         _BLE_Init 0091             Calc_Checksum@endAddr 0074  
                ?_Run_Bootloader 0072                         _EE_Key_1 0070                         _EE_Key_2 0071  
                       _LATBbits 010D                        clear_ram0 02E5                    _reset_pending 0079  
                       _PIR1bits 0011                 EUSART_Write@byte 0072                    ??_service_isr 0072  
                    _EUSART_Read 00FB         Run_Bootloader@msg_length 0024             ProcessBootBuffer@len 0078  
     __size_of_Bootload_Required 000D          ??_OSCILLATOR_Initialize 0072                     ?_Write_Flash 0072  
         Calc_Checksum@check_sum 0076               _Check_Device_Reset 012B                         __ptext10 01B8  
                       __ptext11 0243                         __ptext12 017B                         __ptext13 012B  
                       __ptext14 011A                         __ptext15 010D                         __ptext16 0091  
                       __ptext17 00C2                         __ptext18 0105                         __ptext19 00FB  
            __end_of_service_isr 000A              ?_Check_Device_Reset 0072                    __size_of_main 0003  
               Run_Bootloader@ch 0020                    ?_BLE_SendData 0073                       _RC1STAbits 019D  
            Run_Bootloader@index 0025                       _RB4PPSbits 0E9C                         int$flags 007E  
        Run_Bootloader@receiving 0023             ??_Check_Device_Reset 0072                _ProcessBootBuffer 0147  
             ?_ProcessBootBuffer 0072                      _NVMCON1bits 0895                ?_Get_Version_Data 0072  
             ??_Get_Version_Data 0072                         intlevel1 0000              ??_ProcessBootBuffer 0078  
        ?_PIN_MANAGER_Initialize 0072                __CFG_CLKOUTEN$OFF 0000                   ??_BLE_SendData 0074  
                    _PPSLOCKbits 0E0F                     ?_BLE_SendCMD 0073        __end_of_ProcessBootBuffer 017B  
                  __pstringtext1 02CB                    __pstringtext2 02DA                    __pstringtext3 0000  
                   Erase_Flash@i 0074                 ??_Run_Bootloader 0079                      _service_isr 0004  
 __end_of_PIN_MANAGER_Initialize 0291                   Calc_Checksum@i 0072  
